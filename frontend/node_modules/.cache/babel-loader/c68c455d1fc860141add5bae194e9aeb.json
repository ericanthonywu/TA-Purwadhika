{"ast":null,"code":"var _jsxFileName = \"/Users/ericanthonywu/Projects/TA-Purwadhika/frontend/src/views/AddPost.jsx\";\nimport React from \"react\";\nimport { MDBContainer, MDBRow, MDBCol, MDBCard, MDBCardBody, MDBCardHeader, MDBIcon, MDBInput, MDBBtn } from \"mdbreact\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport { Picker } from \"emoji-mart\";\nimport Post from \"./template/Post\";\nimport axios from 'axios';\nimport { api_url } from \"../global\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../redux/actions\";\n\nclass AddPost extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.addPost = () => {\n      const formdata = new FormData();\n\n      for (let i = 0; i < this.state.file.length; i++) {\n        formdata.append('image', this.state.file[i]);\n      }\n\n      formdata.append('caption', this.state.caption);\n      formdata.append('token', this.props.token);\n      axios.post(\"\".concat(api_url, \"addpost\"), formdata, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data;charset=utf-8\"\n        }\n      }).then(res => {\n        this.props.history.push('/');\n      }).catch(err => {\n        console.log(err);\n        toast.error(\"Session Expire please Login again\");\n        setTimeout(async () => {\n          await this.props.logout(); //prevent concurrency\n\n          this.props.history.push('/login');\n        }, 1000);\n      });\n    };\n\n    this.addEmoji = e => {\n      const emoji = e.native;\n      this.setState({\n        caption: this.state.caption += emoji\n      });\n      this.refs.captionlabel.classList.add('active');\n    };\n\n    this.togglesticker = () => {\n      if (!this.state.showsticker) {\n        // attach/remove event handler\n        document.addEventListener('click', this.handleOutsideClick, false);\n        document.onkeydown = this.handleOutsideClick;\n      } else {\n        document.removeEventListener('click', this.handleOutsideClick, false);\n        document.onkeydown = this.handleOutsideClick;\n      }\n\n      this.setState({\n        showsticker: !this.state.showsticker\n      });\n    };\n\n    this.handlecaption = e => {\n      this.setState({\n        caption: e.target.value\n      });\n    };\n\n    this.filechoosen = e => {\n      if (e.target.files.length) {\n        //cek file\n        if (e.target.files.length > 10) {\n          toast.error(\"Upload 10 photo maximum\");\n        } else {\n          const files = Array.from(e.target.files); //get files array\n\n          this.setState({\n            file: e.target.files\n          });\n          this.setState({\n            loadimage: true\n          });\n          Promise.all(files.map(file => {\n            //mapping files\n            return new Promise((resolve, reject) => {\n              const reader = new FileReader();\n              reader.addEventListener('load', e => {\n                resolve(e.target.result); //return images\n              });\n              reader.addEventListener('error', reject); //put error handler\n\n              reader.readAsDataURL(file);\n            });\n          })).then(images => {\n            this.setState({\n              loadimage: false,\n              image: images\n            });\n          }, e => {\n            toast.error(\"an error occured please upload again\");\n          });\n        }\n      }\n    };\n\n    this.state = {\n      image: [],\n      loadimage: false,\n      showsticker: false,\n      caption: \"\"\n    };\n    this.handleOutsideClick = this.handleOutsideClick.bind(this);\n    this.togglesticker = this.togglesticker.bind(this);\n  }\n\n  handleOutsideClick(e) {\n    // ignore clicks on the component itself\n    if (document.querySelector('section.emoji-mart') !== null) {\n      this.setState({\n        showsticker: !document.querySelector('section.emoji-mart').contains(e.target) || e.key === \"Escape\"\n      });\n      this.togglesticker();\n    }\n  }\n\n  render() {\n    return React.createElement(MDBContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(MDBRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(MDBCol, {\n      lg: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(MDBCard, {\n      className: \"d-flex justify-content-center w-100 form-container\",\n      style: {\n        marginTop: 100,\n        marginLeft: 'auto',\n        marginRight: 'auto'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(MDBCardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(MDBCardHeader, {\n      className: \"form-header deep-blue-gradient rounded\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"my-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(MDBIcon, {\n      icon: \"lock\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), \" Add Post:\")), React.createElement(\"form\", {\n      className: \"needs-validation\",\n      noValidate: true,\n      onSubmit: this.submitHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"md-form form-group d-flex justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.refs.uploadpost.click(),\n      type: \"button\",\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(MDBIcon, {\n      icon: \"upload\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }), \" \\xA0 Upload Image\"), React.createElement(\"input\", {\n      type: \"file\",\n      multiple: true,\n      onChange: this.filechoosen,\n      ref: \"uploadpost\",\n      accept: '.jpg,.jpeg,.png,.pneg',\n      style: {\n        display: \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"md-form form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"md-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, this.state.showsticker && React.createElement(\"div\", {\n      className: \"emoji-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(Picker, {\n      set: \"emojione\",\n      title: \"Choose Sticker\",\n      onSelect: this.addEmoji,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    })), React.createElement(\"textarea\", {\n      style: {\n        paddingTop: 12\n      },\n      className: \"md-textarea comment-textarea form-control\",\n      onBlur: e => !e.target.value.length && this.refs.captionlabel.classList.remove('active'),\n      onFocus: () => this.refs.captionlabel.classList.add('active'),\n      id: \"caption\",\n      onChange: this.handlecaption,\n      value: this.state.caption,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, this.state.caption), React.createElement(\"label\", {\n      htmlFor: \"caption\",\n      ref: \"captionlabel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"Caption\"), React.createElement(MDBBtn, {\n      className: \"sticker\",\n      onClick: this.togglesticker,\n      size: \"lg\",\n      gradient: \"purple\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(MDBIcon, {\n      far: true,\n      icon: \"laugh-beam\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"text-center mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(MDBBtn, {\n      color: \"light-blue\",\n      className: \"mb-3\",\n      type: \"button\",\n      onClick: this.addPost,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"Add New Post\")))))), React.createElement(MDBCol, {\n      lg: 6,\n      style: {\n        marginTop: 100\n      },\n      className: \"d-flex justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(MDBRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(MDBCol, {\n      size: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, this.state.loadimage ? React.createElement(\"div\", {\n      className: \"spinner-border\",\n      role: \"status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"sr-only\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, \"Loading...\")) : this.state.image.length ? React.createElement(React.Fragment, null, React.createElement(\"p\", {\n      className: \"bolder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, \"Your Post Will be Like : \"), React.createElement(Post, {\n      style: {\n        border: \"1px solid black\",\n        padding: 20,\n        borderRadius: 30\n      },\n      id: 1,\n      postusername: localStorage.getItem(\"username\"),\n      posttime: \"a few seconds ago\",\n      postprofilepicture: localStorage.getItem('profile_picture'),\n      postcaption: this.state.caption || \"No caption here\",\n      totalcomment: -2,\n      postlikes: -2,\n      likestatus: true,\n      likeslist: [],\n      postimages: this.state.image,\n      comments: [],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    })) : React.createElement(\"p\", {\n      className: \"bolder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, \"Choose Photo to Preview Post\"))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.user.token,\n    profilepicture: state.user.profilepicture\n  };\n};\n\nexport default connect(mapStateToProps, {\n  logout\n})(AddPost);","map":{"version":3,"sources":["/Users/ericanthonywu/Projects/TA-Purwadhika/frontend/src/views/AddPost.jsx"],"names":["React","MDBContainer","MDBRow","MDBCol","MDBCard","MDBCardBody","MDBCardHeader","MDBIcon","MDBInput","MDBBtn","toast","ToastContainer","Picker","Post","axios","api_url","connect","logout","AddPost","Component","constructor","props","addPost","formdata","FormData","i","state","file","length","append","caption","token","post","headers","then","res","history","push","catch","err","console","log","error","setTimeout","addEmoji","e","emoji","native","setState","refs","captionlabel","classList","add","togglesticker","showsticker","document","addEventListener","handleOutsideClick","onkeydown","removeEventListener","handlecaption","target","value","filechoosen","files","Array","from","loadimage","Promise","all","map","resolve","reject","reader","FileReader","result","readAsDataURL","images","image","bind","querySelector","contains","key","render","marginTop","marginLeft","marginRight","submitHandler","uploadpost","click","display","paddingTop","remove","border","padding","borderRadius","localStorage","getItem","mapStateToProps","user","profilepicture"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,YADJ,EAEIC,MAFJ,EAGIC,MAHJ,EAIIC,OAJJ,EAKIC,WALJ,EAMIC,aANJ,EAOIC,OAPJ,EAQIC,QARJ,EASIC,MATJ,QAUO,UAVP;AAWA,SAAQC,KAAR,EAAeC,cAAf,QAAoC,gBAApC;AAEA,SAAQC,MAAR,QAAqB,YAArB;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,WAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,MAAR,QAAqB,kBAArB;;AAEA,MAAMC,OAAN,SAAsBlB,KAAK,CAACmB,SAA5B,CAAsC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAYnBC,OAZmB,GAYT,MAAM;AACZ,YAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,MAApC,EAA4CH,CAAC,EAA7C,EAAiD;AAC7CF,QAAAA,QAAQ,CAACM,MAAT,CAAgB,OAAhB,EAAyB,KAAKH,KAAL,CAAWC,IAAX,CAAgBF,CAAhB,CAAzB;AACH;;AACDF,MAAAA,QAAQ,CAACM,MAAT,CAAgB,SAAhB,EAA2B,KAAKH,KAAL,CAAWI,OAAtC;AACAP,MAAAA,QAAQ,CAACM,MAAT,CAAgB,OAAhB,EAAyB,KAAKR,KAAL,CAAWU,KAApC;AACAjB,MAAAA,KAAK,CAACkB,IAAN,WAAcjB,OAAd,cAAgCQ,QAAhC,EAA0C;AACtCU,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX;AAD6B,OAA1C,EAIGC,IAJH,CAIQC,GAAG,IAAI;AACX,aAAKd,KAAL,CAAWe,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACH,OAND,EAMGC,KANH,CAMSC,GAAG,IAAI;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA7B,QAAAA,KAAK,CAACgC,KAAN,CAAY,mCAAZ;AACAC,QAAAA,UAAU,CAAC,YAAY;AACnB,gBAAM,KAAKtB,KAAL,CAAWJ,MAAX,EAAN,CADmB,CACQ;;AAC3B,eAAKI,KAAL,CAAWe,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB;AACH,SAHS,EAGP,IAHO,CAAV;AAIH,OAbD;AAcH,KAjCkB;;AAAA,SA6CnBO,QA7CmB,GA6CRC,CAAC,IAAI;AACZ,YAAMC,KAAK,GAAGD,CAAC,CAACE,MAAhB;AACA,WAAKC,QAAL,CAAc;AACVlB,QAAAA,OAAO,EAAE,KAAKJ,KAAL,CAAWI,OAAX,IAAsBgB;AADrB,OAAd;AAGA,WAAKG,IAAL,CAAUC,YAAV,CAAuBC,SAAvB,CAAiCC,GAAjC,CAAqC,QAArC;AACH,KAnDkB;;AAAA,SAoDnBC,aApDmB,GAoDH,MAAM;AAClB,UAAI,CAAC,KAAK3B,KAAL,CAAW4B,WAAhB,EAA6B;AACzB;AACAC,QAAAA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmC,KAAKC,kBAAxC,EAA4D,KAA5D;AACAF,QAAAA,QAAQ,CAACG,SAAT,GAAqB,KAAKD,kBAA1B;AACH,OAJD,MAIO;AACHF,QAAAA,QAAQ,CAACI,mBAAT,CAA6B,OAA7B,EAAsC,KAAKF,kBAA3C,EAA+D,KAA/D;AACAF,QAAAA,QAAQ,CAACG,SAAT,GAAqB,KAAKD,kBAA1B;AACH;;AACD,WAAKT,QAAL,CAAc;AACVM,QAAAA,WAAW,EAAE,CAAC,KAAK5B,KAAL,CAAW4B;AADf,OAAd;AAGH,KAhEkB;;AAAA,SAiEnBM,aAjEmB,GAiEHf,CAAC,IAAI;AACjB,WAAKG,QAAL,CAAc;AACVlB,QAAAA,OAAO,EAAEe,CAAC,CAACgB,MAAF,CAASC;AADR,OAAd;AAGH,KArEkB;;AAAA,SAsEnBC,WAtEmB,GAsELlB,CAAC,IAAI;AACf,UAAIA,CAAC,CAACgB,MAAF,CAASG,KAAT,CAAepC,MAAnB,EAA2B;AAAE;AACzB,YAAIiB,CAAC,CAACgB,MAAF,CAASG,KAAT,CAAepC,MAAf,GAAwB,EAA5B,EAAgC;AAC5BlB,UAAAA,KAAK,CAACgC,KAAN,CAAY,yBAAZ;AACH,SAFD,MAEO;AACH,gBAAMsB,KAAK,GAAGC,KAAK,CAACC,IAAN,CAAWrB,CAAC,CAACgB,MAAF,CAASG,KAApB,CAAd,CADG,CACuC;;AAC1C,eAAKhB,QAAL,CAAc;AACVrB,YAAAA,IAAI,EAAEkB,CAAC,CAACgB,MAAF,CAASG;AADL,WAAd;AAGA,eAAKhB,QAAL,CAAc;AACVmB,YAAAA,SAAS,EAAE;AADD,WAAd;AAGAC,UAAAA,OAAO,CAACC,GAAR,CAAYL,KAAK,CAACM,GAAN,CAAU3C,IAAI,IAAI;AAAE;AAC5B,mBAAQ,IAAIyC,OAAJ,CAAY,CAACG,OAAD,EAAUC,MAAV,KAAqB;AACrC,oBAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;AACAD,cAAAA,MAAM,CAACjB,gBAAP,CAAwB,MAAxB,EAAgCX,CAAC,IAAI;AACjC0B,gBAAAA,OAAO,CAAC1B,CAAC,CAACgB,MAAF,CAASc,MAAV,CAAP,CADiC,CACP;AAC7B,eAFD;AAGAF,cAAAA,MAAM,CAACjB,gBAAP,CAAwB,OAAxB,EAAiCgB,MAAjC,EALqC,CAKK;;AAC1CC,cAAAA,MAAM,CAACG,aAAP,CAAqBjD,IAArB;AACH,aAPO,CAAR;AAQH,WATW,CAAZ,EASIO,IATJ,CASS2C,MAAM,IAAI;AACf,iBAAK7B,QAAL,CAAc;AACVmB,cAAAA,SAAS,EAAE,KADD;AAEVW,cAAAA,KAAK,EAAED;AAFG,aAAd;AAIH,WAdD,EAcGhC,CAAC,IAAI;AACJnC,YAAAA,KAAK,CAACgC,KAAN,CAAY,sCAAZ;AACH,WAhBD;AAiBH;AACJ;AACJ,KArGkB;;AAEf,SAAKhB,KAAL,GAAa;AACToD,MAAAA,KAAK,EAAE,EADE;AAETX,MAAAA,SAAS,EAAE,KAFF;AAGTb,MAAAA,WAAW,EAAE,KAHJ;AAITxB,MAAAA,OAAO,EAAE;AAJA,KAAb;AAMA,SAAK2B,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBsB,IAAxB,CAA6B,IAA7B,CAA1B;AACA,SAAK1B,aAAL,GAAqB,KAAKA,aAAL,CAAmB0B,IAAnB,CAAwB,IAAxB,CAArB;AACH;;AAyBDtB,EAAAA,kBAAkB,CAACZ,CAAD,EAAI;AAClB;AACA,QAAIU,QAAQ,CAACyB,aAAT,CAAuB,oBAAvB,MAAiD,IAArD,EAA2D;AACvD,WAAKhC,QAAL,CAAc;AACVM,QAAAA,WAAW,EAAE,CAACC,QAAQ,CAACyB,aAAT,CAAuB,oBAAvB,EAA6CC,QAA7C,CAAsDpC,CAAC,CAACgB,MAAxD,CAAD,IAAoEhB,CAAC,CAACqC,GAAF,KAAU;AADjF,OAAd;AAGA,WAAK7B,aAAL;AACH;AACJ;;AA4DD8B,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,OAAD;AAAS,MAAA,SAAS,EAAC,oDAAnB;AACS,MAAA,KAAK,EAAE;AAACC,QAAAA,SAAS,EAAE,GAAZ;AAAiBC,QAAAA,UAAU,EAAE,MAA7B;AAAqCC,QAAAA,WAAW,EAAE;AAAlD,OADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,aAAD;AAAe,MAAA,SAAS,EAAC,wCAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,OAAD;AAAS,MAAA,IAAI,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eADJ,CADJ,EAMI;AAAM,MAAA,SAAS,EAAE,kBAAjB;AAAqC,MAAA,UAAU,MAA/C;AAAgD,MAAA,QAAQ,EAAE,KAAKC,aAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,kDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKtC,IAAL,CAAUuC,UAAV,CAAqBC,KAArB,EAAvB;AAAqD,MAAA,IAAI,EAAC,QAA1D;AACQ,MAAA,SAAS,EAAE,iBADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACsC,oBAAC,OAAD;AAAS,MAAA,IAAI,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADtC,uBADJ,EAKI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,MAA3B;AAA4B,MAAA,QAAQ,EAAE,KAAK1B,WAA3C;AAAwD,MAAA,GAAG,EAAE,YAA7D;AACO,MAAA,MAAM,EAAE,uBADf;AACwC,MAAA,KAAK,EAAE;AAAC2B,QAAAA,OAAO,EAAE;AAAV,OAD/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CADJ,EASI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKhE,KAAL,CAAW4B,WAAX,IAA0B;AAAK,MAAA,SAAS,EAAE,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACvB,oBAAC,MAAD;AAAQ,MAAA,GAAG,EAAC,UAAZ;AAAuB,MAAA,KAAK,EAAE,gBAA9B;AACQ,MAAA,QAAQ,EAAE,KAAKV,QADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADuB,CAD/B,EAKI;AAAU,MAAA,KAAK,EAAE;AAAC+C,QAAAA,UAAU,EAAE;AAAb,OAAjB;AACU,MAAA,SAAS,EAAE,2CADrB;AAEU,MAAA,MAAM,EAAE9C,CAAC,IAAI,CAACA,CAAC,CAACgB,MAAF,CAASC,KAAT,CAAelC,MAAhB,IAA0B,KAAKqB,IAAL,CAAUC,YAAV,CAAuBC,SAAvB,CAAiCyC,MAAjC,CAAwC,QAAxC,CAFjD;AAGU,MAAA,OAAO,EAAE,MAAM,KAAK3C,IAAL,CAAUC,YAAV,CAAuBC,SAAvB,CAAiCC,GAAjC,CAAqC,QAArC,CAHzB;AAIU,MAAA,EAAE,EAAE,SAJd;AAKU,MAAA,QAAQ,EAAE,KAAKQ,aALzB;AAMU,MAAA,KAAK,EAAE,KAAKlC,KAAL,CAAWI,OAN5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQC,KAAKJ,KAAL,CAAWI,OARZ,CALJ,EAeI;AAAO,MAAA,OAAO,EAAC,SAAf;AAAyB,MAAA,GAAG,EAAE,cAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAfJ,EAgBI,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAE,SAAnB;AACQ,MAAA,OAAO,EAAE,KAAKuB,aADtB;AACqC,MAAA,IAAI,EAAC,IAD1C;AAEQ,MAAA,QAAQ,EAAC,QAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAE0B,oBAAC,OAAD;AACtB,MAAA,GAAG,MADmB;AAClB,MAAA,IAAI,EAAC,YADa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAF1B,CAhBJ,CADJ,CATJ,EAgCI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AACI,MAAA,KAAK,EAAC,YADV;AAEI,MAAA,SAAS,EAAC,MAFd;AAGI,MAAA,IAAI,EAAC,QAHT;AAII,MAAA,OAAO,EAAE,KAAK/B,OAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,CAhCJ,CANJ,CAFJ,CADJ,CADJ,EAwDI,oBAAC,MAAD;AAAQ,MAAA,EAAE,EAAE,CAAZ;AAAe,MAAA,KAAK,EAAE;AAAC8D,QAAAA,SAAS,EAAE;AAAZ,OAAtB;AAAwC,MAAA,SAAS,EAAE,+BAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAE,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAK1D,KAAL,CAAWyC,SAAX,GACG;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAgC,MAAA,IAAI,EAAC,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CADH,GAKG,KAAKzC,KAAL,CAAWoD,KAAX,CAAiBlD,MAAjB,GACI,0CACI;AAAG,MAAA,SAAS,EAAE,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADJ,EAEI,oBAAC,IAAD;AACI,MAAA,KAAK,EAAE;AAACiE,QAAAA,MAAM,EAAE,iBAAT;AAA4BC,QAAAA,OAAO,EAAE,EAArC;AAAyCC,QAAAA,YAAY,EAAE;AAAvD,OADX;AAEI,MAAA,EAAE,EAAE,CAFR;AAGI,MAAA,YAAY,EAAEC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAHlB;AAII,MAAA,QAAQ,EAAE,mBAJd;AAKI,MAAA,kBAAkB,EAAED,YAAY,CAACC,OAAb,CAAqB,iBAArB,CALxB;AAMI,MAAA,WAAW,EAAE,KAAKvE,KAAL,CAAWI,OAAX,IAAsB,iBANvC;AAOI,MAAA,YAAY,EAAE,CAAC,CAPnB;AAQI,MAAA,SAAS,EAAE,CAAC,CARhB;AASI,MAAA,UAAU,EAAE,IAThB;AAUI,MAAA,SAAS,EAAE,EAVf;AAWI,MAAA,UAAU,EAAE,KAAKJ,KAAL,CAAWoD,KAX3B;AAYI,MAAA,QAAQ,EAAE,EAZd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,GAiBU;AAAG,MAAA,SAAS,EAAE,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAvBlB,CADJ,CADJ,CAxDJ,CAFJ,CADJ;AA2FH;;AApMiC;;AAuMtC,MAAMoB,eAAe,GAAGxE,KAAK,IAAI;AAC7B,SAAO;AACHK,IAAAA,KAAK,EAAEL,KAAK,CAACyE,IAAN,CAAWpE,KADf;AAEHqE,IAAAA,cAAc,EAAE1E,KAAK,CAACyE,IAAN,CAAWC;AAFxB,GAAP;AAIH,CALD;;AAOA,eAAepF,OAAO,CAACkF,eAAD,EAAkB;AAACjF,EAAAA;AAAD,CAAlB,CAAP,CAAmCC,OAAnC,CAAf","sourcesContent":["import React from \"react\";\nimport {\n    MDBContainer,\n    MDBRow,\n    MDBCol,\n    MDBCard,\n    MDBCardBody,\n    MDBCardHeader,\n    MDBIcon,\n    MDBInput,\n    MDBBtn,\n} from \"mdbreact\";\nimport {toast, ToastContainer} from \"react-toastify\";\n\nimport {Picker} from \"emoji-mart\";\nimport Post from \"./template/Post\";\nimport axios from 'axios'\nimport {api_url} from \"../global\";\nimport {connect} from \"react-redux\";\nimport {logout} from \"../redux/actions\";\n\nclass AddPost extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            image: [],\n            loadimage: false,\n            showsticker: false,\n            caption: \"\"\n        };\n        this.handleOutsideClick = this.handleOutsideClick.bind(this);\n        this.togglesticker = this.togglesticker.bind(this)\n    }\n\n    addPost = () => {\n        const formdata = new FormData();\n        for (let i = 0; i < this.state.file.length; i++) {\n            formdata.append('image', this.state.file[i])\n        }\n        formdata.append('caption', this.state.caption);\n        formdata.append('token', this.props.token);\n        axios.post(`${api_url}addpost`, formdata, {\n            headers: {\n                \"Content-Type\": \"multipart/form-data;charset=utf-8\"\n            }\n        }).then(res => {\n            this.props.history.push('/')\n        }).catch(err => {\n            console.log(err);\n            toast.error(\"Session Expire please Login again\");\n            setTimeout(async () => {\n                await this.props.logout(); //prevent concurrency\n                this.props.history.push('/login')\n            }, 1000)\n        })\n    };\n\n    handleOutsideClick(e) {\n        // ignore clicks on the component itself\n        if (document.querySelector('section.emoji-mart') !== null) {\n            this.setState({\n                showsticker: !document.querySelector('section.emoji-mart').contains(e.target) || e.key === \"Escape\"\n            });\n            this.togglesticker()\n        }\n    }\n\n    addEmoji = e => {\n        const emoji = e.native;\n        this.setState({\n            caption: this.state.caption += emoji,\n        });\n        this.refs.captionlabel.classList.add('active')\n    };\n    togglesticker = () => {\n        if (!this.state.showsticker) {\n            // attach/remove event handler\n            document.addEventListener('click', this.handleOutsideClick, false);\n            document.onkeydown = this.handleOutsideClick\n        } else {\n            document.removeEventListener('click', this.handleOutsideClick, false);\n            document.onkeydown = this.handleOutsideClick\n        }\n        this.setState({\n            showsticker: !this.state.showsticker\n        })\n    };\n    handlecaption = e => {\n        this.setState({\n            caption: e.target.value,\n        })\n    };\n    filechoosen = e => {\n        if (e.target.files.length) { //cek file\n            if (e.target.files.length > 10) {\n                toast.error(\"Upload 10 photo maximum\")\n            } else {\n                const files = Array.from(e.target.files); //get files array\n                this.setState({\n                    file: e.target.files\n                });\n                this.setState({\n                    loadimage: true\n                });\n                Promise.all(files.map(file => { //mapping files\n                    return (new Promise((resolve, reject) => {\n                        const reader = new FileReader();\n                        reader.addEventListener('load', e => {\n                            resolve(e.target.result); //return images\n                        });\n                        reader.addEventListener('error', reject); //put error handler\n                        reader.readAsDataURL(file);\n                    }));\n                })).then(images => {\n                    this.setState({\n                        loadimage: false,\n                        image: images\n                    });\n                }, e => {\n                    toast.error(\"an error occured please upload again\")\n                });\n            }\n        }\n    };\n\n    render() {\n        return (\n            <MDBContainer>\n\n                <MDBRow>\n                    <MDBCol lg=\"6\">\n                        <MDBCard className=\"d-flex justify-content-center w-100 form-container\"\n                                 style={{marginTop: 100, marginLeft: 'auto', marginRight: 'auto'}}>\n                            <MDBCardBody>\n                                <MDBCardHeader className=\"form-header deep-blue-gradient rounded\">\n                                    <h3 className=\"my-3\">\n                                        <MDBIcon icon=\"lock\"/> Add Post:\n                                    </h3>\n                                </MDBCardHeader>\n                                <form className={\"needs-validation\"} noValidate onSubmit={this.submitHandler}>\n                                    <div className=\"md-form form-group d-flex justify-content-center\">\n                                        <button onClick={() => this.refs.uploadpost.click()} type=\"button\"\n                                                className={\"btn btn-primary\"}><MDBIcon icon=\"upload\"/> &nbsp; Upload\n                                            Image\n                                        </button>\n                                        <input type=\"file\" multiple onChange={this.filechoosen} ref={\"uploadpost\"}\n                                               accept={'.jpg,.jpeg,.png,.pneg'} style={{display: \"none\"}}/>\n                                    </div>\n                                    <div className=\"md-form form-group\">\n                                        <div className=\"md-form\">\n                                            {this.state.showsticker && <div className={\"emoji-container\"}>\n                                                <Picker set='emojione' title={\"Choose Sticker\"}\n                                                        onSelect={this.addEmoji}/>\n                                            </div>}\n                                            <textarea style={{paddingTop: 12}}\n                                                      className={\"md-textarea comment-textarea form-control\"}\n                                                      onBlur={e => !e.target.value.length && this.refs.captionlabel.classList.remove('active')}\n                                                      onFocus={() => this.refs.captionlabel.classList.add('active')}\n                                                      id={\"caption\"}\n                                                      onChange={this.handlecaption}\n                                                      value={this.state.caption}\n                                            >\n                                            {this.state.caption}\n                                        </textarea>\n                                            <label htmlFor=\"caption\" ref={\"captionlabel\"}>Caption</label>\n                                            <MDBBtn className={\"sticker\"}\n                                                    onClick={this.togglesticker} size=\"lg\"\n                                                    gradient=\"purple\"><MDBIcon\n                                                far icon=\"laugh-beam\"/></MDBBtn>\n                                        </div>\n                                    </div>\n                                    <div className=\"text-center mt-4\">\n                                        <MDBBtn\n                                            color=\"light-blue\"\n                                            className=\"mb-3\"\n                                            type=\"button\"\n                                            onClick={this.addPost}\n                                        >\n                                            Add New Post\n                                        </MDBBtn>\n                                    </div>\n                                </form>\n                            </MDBCardBody>\n                        </MDBCard>\n                    </MDBCol>\n                    <MDBCol lg={6} style={{marginTop: 100}} className={\"d-flex justify-content-center\"}>\n                        <MDBRow>\n                            <MDBCol size={12}>\n                                {this.state.loadimage ?\n                                    <div className=\"spinner-border\" role=\"status\">\n                                        <span className=\"sr-only\">Loading...</span>\n                                    </div>\n                                    :\n                                    this.state.image.length ?\n                                        <>\n                                            <p className={\"bolder\"}>Your Post Will be Like : </p>\n                                            <Post\n                                                style={{border: \"1px solid black\", padding: 20, borderRadius: 30}}\n                                                id={1}\n                                                postusername={localStorage.getItem(\"username\")}\n                                                posttime={\"a few seconds ago\"}\n                                                postprofilepicture={localStorage.getItem('profile_picture')}\n                                                postcaption={this.state.caption || \"No caption here\"}\n                                                totalcomment={-2}\n                                                postlikes={-2}\n                                                likestatus={true}\n                                                likeslist={[]}\n                                                postimages={this.state.image}\n                                                comments={[]}\n                                            />\n                                        </> : <p className={\"bolder\"}>Choose Photo to Preview Post</p>}\n                            </MDBCol>\n                        </MDBRow>\n                    </MDBCol>\n                </MDBRow>\n            </MDBContainer>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        token: state.user.token,\n        profilepicture: state.user.profilepicture\n    }\n};\n\nexport default connect(mapStateToProps, {logout})(AddPost)\n\n"]},"metadata":{},"sourceType":"module"}