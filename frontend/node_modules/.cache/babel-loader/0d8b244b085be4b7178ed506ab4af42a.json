{"ast":null,"code":"var _jsxFileName = \"/Users/ericanthonywu/Projects/TA-Purwadhika/frontend/src/views/Register.jsx\";\nimport React from \"react\";\nimport { MDBBtn, MDBCard, MDBCardBody, MDBCardHeader, MDBCol, MDBContainer, MDBIcon, MDBInput, MDBModalFooter, MDBRow } from \"mdbreact\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { toast, ToastContainer } from 'react-toastify';\nimport { api_url } from \"../global\";\nexport default class Register extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.submitHandler = e => {\n      e.preventDefault();\n      e.target.className += \" was-validated\";\n      const input = document.querySelectorAll('form.needs-validation input');\n      let valid = true;\n\n      for (let i = 0; i < input.length; i++) {\n        const target = {\n          target: input[i]\n        };\n\n        if (input[i].classList.contains('invalid-input') || input[i].parentNode.classList.contains('invalid-input')) {\n          valid = false;\n        }\n\n        this.validateinput(target, false);\n      }\n\n      if (valid) {\n        axios.post(\"\".concat(api_url, \"register\"), {\n          username: this.state.username,\n          email: this.state.email,\n          password: this.state.password\n        }).then(async res => {\n          toast.success(res.data.message);\n          setTimeout(() => {\n            this.props.history.push('/login');\n          }, 1000);\n        }).catch(err => {\n          toast.error(err.response.data.message);\n        });\n      }\n    };\n\n    this.invalidinput = (e, value = null) => {\n      if (e.target.parentNode.classList.contains('valid-div')) {\n        e.target.parentNode.classList.remove('valid-div');\n      }\n\n      if (e.target.classList.contains('valid-input')) {\n        e.target.classList.remove('valid-input');\n      }\n\n      e.target.classList.add('invalid-input');\n      e.target.parentNode.classList.add('invalid-div');\n\n      if (value !== null) {\n        e.target.value = value;\n      }\n    };\n\n    this.validinput = (e, value = null) => {\n      if (e.target.parentNode.classList.contains('invalid-div')) {\n        e.target.parentNode.classList.remove('invalid-div');\n      }\n\n      if (e.target.classList.contains('invalid-input')) {\n        e.target.classList.remove('invalid-input');\n      }\n\n      e.target.classList.add('valid-input');\n      e.target.parentNode.classList.add('valid-div');\n\n      if (value !== null) {\n        e.target.value = value;\n      }\n    };\n\n    this.removevalidate = e => {\n      e.target.classList.remove('invalid-input');\n      e.target.parentNode.classList.remove('invalid-div');\n    };\n\n    this.validateinput = (e, persist = true) => {\n      if (persist) {\n        e.persist();\n      }\n\n      if (e.target.value == \"\") {\n        this.invalidinput(e);\n\n        switch (e.target.name) {\n          case \"email\":\n            this.setState({\n              emailfeedback: \"Email required\"\n            });\n            break;\n\n          case \"username\":\n            this.setState({\n              usernamefeedback: \"Username must be filled\"\n            });\n            break;\n\n          case \"password\":\n            this.setState({\n              passwordfeedback: \"Password can't Empty\"\n            });\n            break;\n\n          case \"cpassword\":\n            this.setState({\n              cpasswordfeedback: \"Please Confirm Your Password\"\n            });\n            break;\n        }\n      } else {\n        switch (e.target.name) {\n          case \"email\":\n            axios.post(\"\".concat(api_url, \"checkemail\"), {\n              email: e.target.value\n            }).then(r => {\n              this.validinput(e);\n              this.setState({\n                emailfeedback: \"\"\n              });\n            }).catch(er => {\n              this.invalidinput(e);\n              this.setState({\n                emailfeedback: \"Email Has been taken\"\n              });\n            });\n            break;\n\n          case \"username\":\n            axios.post(\"\".concat(api_url, \"checkusername\"), {\n              username: e.target.value\n            }).then(r => {\n              this.validinput(e);\n              this.setState({\n                usernamefeedback: \"\"\n              });\n            }).catch(er => {\n              this.invalidinput(e);\n              this.setState({\n                usernamefeedback: \"Username Has been taken\"\n              });\n            });\n            break;\n\n          case \"password\":\n            if (this.state.password.length < 6) {\n              this.invalidinput(e);\n              this.setState({\n                passwordfeedback: \"Password Must be At Least 6 Characters\"\n              });\n            } else {\n              this.validinput(e);\n              this.setState({\n                passwordfeedback: \"\"\n              });\n            }\n\n            break;\n\n          case \"cpassword\":\n            if (this.state.cpassword !== this.state.password) {\n              this.invalidinput(e);\n              this.setState({\n                cpasswordfeedback: \"Password doesn't match\"\n              });\n            } else {\n              this.validinput(e);\n              this.setState({\n                cpasswordfeedback: \"\"\n              });\n            }\n\n            break;\n\n          default:\n            this.validinput(e);\n        }\n      }\n    };\n\n    this.changeHandler = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n\n      if (e.target.name === \"username\") {\n        const regex = new RegExp(\"^[a-zA-Z0-9]$\");\n        const key = String.fromCharCode(!e.charCode ? e.which : e.charCode);\n\n        if (!regex.test(key)) {\n          e.preventDefault();\n          return false;\n        }\n      }\n    };\n\n    this.state = {\n      email: \"\",\n      username: \"\",\n      password: \"\",\n      cpassword: \"\",\n      emailfeedback: \"\",\n      usernamefeedback: \"\",\n      passwordfeedback: \"\",\n      cpasswordfeedback: \"\"\n    };\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(MDBContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(MDBRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(MDBCol, {\n      md: \"12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(MDBCard, {\n      className: \"d-flex justify-content-center w-50 form-container\",\n      style: {\n        marginTop: 100,\n        marginLeft: 'auto',\n        marginRight: 'auto'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(MDBCardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(MDBCardHeader, {\n      className: \"form-header deep-blue-gradient rounded\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"my-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(MDBIcon, {\n      icon: \"lock\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }), \" Register:\")), React.createElement(\"form\", {\n      className: \"needs-validation\",\n      noValidate: true,\n      onSubmit: this.submitHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"grey-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(MDBInput, {\n      label: \"Type your email\",\n      icon: \"envelope\",\n      group: true,\n      type: \"email\",\n      value: this.state.email,\n      name: \"email\",\n      onChange: this.changeHandler,\n      onBlur: this.validateinput,\n      onFocus: this.removevalidate,\n      id: \"email\",\n      validate: true,\n      error: \"wrong\",\n      success: \"right\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, this.state.emailfeedback), React.createElement(\"div\", {\n      className: \"valid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, \"Email Available!\")), React.createElement(MDBInput, {\n      label: \"Type your Username\",\n      icon: \"user\",\n      group: true,\n      onChange: this.changeHandler,\n      value: this.state.username,\n      name: \"username\",\n      onBlur: this.validateinput,\n      onFocus: this.removevalidate,\n      type: \"text\",\n      validate: true,\n      error: \"wrong\",\n      success: \"right\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, this.state.usernamefeedback), React.createElement(\"div\", {\n      className: \"valid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, \"Username Available!\")), React.createElement(MDBInput, {\n      label: \"Type your password\",\n      icon: \"lock\",\n      group: true,\n      type: \"password\",\n      validate: true,\n      onChange: this.changeHandler,\n      onBlur: this.validateinput,\n      onFocus: this.removevalidate,\n      value: this.state.password,\n      name: \"password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, this.state.passwordfeedback), React.createElement(\"div\", {\n      className: \"valid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, \"Password Valid!\")), React.createElement(MDBInput, {\n      label: \"Confirm your password\",\n      icon: \"lock\",\n      group: true,\n      type: \"password\",\n      onChange: this.changeHandler,\n      onBlur: this.validateinput,\n      onFocus: this.removevalidate,\n      value: this.state.cpassword,\n      name: \"cpassword\",\n      validate: true,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"comments\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, this.state.cpasswordfeedback), React.createElement(\"div\", {\n      className: \"valid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, \"Password Match!\")))), React.createElement(\"div\", {\n      className: \"text-center mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, React.createElement(MDBBtn, {\n      color: \"light-blue\",\n      className: \"mb-3\",\n      type: \"button\",\n      onClick: this.submitHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, \"Register\"))), React.createElement(MDBModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"font-weight-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, \"Have an account? \", React.createElement(Link, {\n      to: \"login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, \"Sign In\"))))))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/ericanthonywu/Projects/TA-Purwadhika/frontend/src/views/Register.jsx"],"names":["React","MDBBtn","MDBCard","MDBCardBody","MDBCardHeader","MDBCol","MDBContainer","MDBIcon","MDBInput","MDBModalFooter","MDBRow","Link","axios","toast","ToastContainer","api_url","Register","Component","constructor","props","submitHandler","e","preventDefault","target","className","input","document","querySelectorAll","valid","i","length","classList","contains","parentNode","validateinput","post","username","state","email","password","then","res","success","data","message","setTimeout","history","push","catch","err","error","response","invalidinput","value","remove","add","validinput","removevalidate","persist","name","setState","emailfeedback","usernamefeedback","passwordfeedback","cpasswordfeedback","r","er","cpassword","changeHandler","regex","RegExp","key","String","fromCharCode","charCode","which","test","render","marginTop","marginLeft","marginRight"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,MADJ,EAEIC,OAFJ,EAGIC,WAHJ,EAIIC,aAJJ,EAKIC,MALJ,EAMIC,YANJ,EAOIC,OAPJ,EAQIC,QARJ,EASIC,cATJ,EAUIC,MAVJ,QAWO,UAXP;AAYA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAeC,cAAf,QAAoC,gBAApC;AAEA,SAAQC,OAAR,QAAsB,WAAtB;AAEA,eAAe,MAAMC,QAAN,SAAuBhB,KAAK,CAACiB,SAA7B,CAAuC;AAClDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAcnBC,aAdmB,GAcHC,CAAC,IAAI;AACjBA,MAAAA,CAAC,CAACC,cAAF;AACAD,MAAAA,CAAC,CAACE,MAAF,CAASC,SAAT,IAAsB,gBAAtB;AACA,YAAMC,KAAK,GAAGC,QAAQ,CAACC,gBAAT,CAA0B,6BAA1B,CAAd;AACA,UAAIC,KAAK,GAAG,IAAZ;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,KAAK,CAACK,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACnC,cAAMN,MAAM,GAAG;AACXA,UAAAA,MAAM,EAAEE,KAAK,CAACI,CAAD;AADF,SAAf;;AAGA,YAAIJ,KAAK,CAACI,CAAD,CAAL,CAASE,SAAT,CAAmBC,QAAnB,CAA4B,eAA5B,KAAgDP,KAAK,CAACI,CAAD,CAAL,CAASI,UAAT,CAAoBF,SAApB,CAA8BC,QAA9B,CAAuC,eAAvC,CAApD,EAA6G;AACzGJ,UAAAA,KAAK,GAAG,KAAR;AACH;;AACD,aAAKM,aAAL,CAAmBX,MAAnB,EAA2B,KAA3B;AACH;;AACD,UAAIK,KAAJ,EAAW;AACPhB,QAAAA,KAAK,CAACuB,IAAN,WAAcpB,OAAd,eAAiC;AAC7BqB,UAAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWD,QADQ;AAE7BE,UAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAFW;AAG7BC,UAAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWE;AAHQ,SAAjC,EAIGC,IAJH,CAIQ,MAAMC,GAAN,IAAa;AACjB5B,UAAAA,KAAK,CAAC6B,OAAN,CAAcD,GAAG,CAACE,IAAJ,CAASC,OAAvB;AACAC,UAAAA,UAAU,CAAC,MAAM;AACb,iBAAK1B,KAAL,CAAW2B,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB;AACH,WAFS,EAER,IAFQ,CAAV;AAGH,SATD,EASGC,KATH,CASSC,GAAG,IAAI;AACZpC,UAAAA,KAAK,CAACqC,KAAN,CAAYD,GAAG,CAACE,QAAJ,CAAaR,IAAb,CAAkBC,OAA9B;AACH,SAXD;AAYH;AAEJ,KA3CkB;;AAAA,SA4CnBQ,YA5CmB,GA4CJ,CAAC/B,CAAD,EAAIgC,KAAK,GAAG,IAAZ,KAAqB;AAChC,UAAIhC,CAAC,CAACE,MAAF,CAASU,UAAT,CAAoBF,SAApB,CAA8BC,QAA9B,CAAuC,WAAvC,CAAJ,EAAyD;AACrDX,QAAAA,CAAC,CAACE,MAAF,CAASU,UAAT,CAAoBF,SAApB,CAA8BuB,MAA9B,CAAqC,WAArC;AACH;;AACD,UAAIjC,CAAC,CAACE,MAAF,CAASQ,SAAT,CAAmBC,QAAnB,CAA4B,aAA5B,CAAJ,EAAgD;AAC5CX,QAAAA,CAAC,CAACE,MAAF,CAASQ,SAAT,CAAmBuB,MAAnB,CAA0B,aAA1B;AACH;;AACDjC,MAAAA,CAAC,CAACE,MAAF,CAASQ,SAAT,CAAmBwB,GAAnB,CAAuB,eAAvB;AACAlC,MAAAA,CAAC,CAACE,MAAF,CAASU,UAAT,CAAoBF,SAApB,CAA8BwB,GAA9B,CAAkC,aAAlC;;AACA,UAAIF,KAAK,KAAK,IAAd,EAAoB;AAChBhC,QAAAA,CAAC,CAACE,MAAF,CAAS8B,KAAT,GAAiBA,KAAjB;AACH;AACJ,KAxDkB;;AAAA,SAyDnBG,UAzDmB,GAyDN,CAACnC,CAAD,EAAIgC,KAAK,GAAG,IAAZ,KAAqB;AAC9B,UAAIhC,CAAC,CAACE,MAAF,CAASU,UAAT,CAAoBF,SAApB,CAA8BC,QAA9B,CAAuC,aAAvC,CAAJ,EAA2D;AACvDX,QAAAA,CAAC,CAACE,MAAF,CAASU,UAAT,CAAoBF,SAApB,CAA8BuB,MAA9B,CAAqC,aAArC;AACH;;AACD,UAAIjC,CAAC,CAACE,MAAF,CAASQ,SAAT,CAAmBC,QAAnB,CAA4B,eAA5B,CAAJ,EAAkD;AAC9CX,QAAAA,CAAC,CAACE,MAAF,CAASQ,SAAT,CAAmBuB,MAAnB,CAA0B,eAA1B;AACH;;AACDjC,MAAAA,CAAC,CAACE,MAAF,CAASQ,SAAT,CAAmBwB,GAAnB,CAAuB,aAAvB;AACAlC,MAAAA,CAAC,CAACE,MAAF,CAASU,UAAT,CAAoBF,SAApB,CAA8BwB,GAA9B,CAAkC,WAAlC;;AACA,UAAIF,KAAK,KAAK,IAAd,EAAoB;AAChBhC,QAAAA,CAAC,CAACE,MAAF,CAAS8B,KAAT,GAAiBA,KAAjB;AACH;AACJ,KArEkB;;AAAA,SAsEnBI,cAtEmB,GAsEFpC,CAAC,IAAI;AAClBA,MAAAA,CAAC,CAACE,MAAF,CAASQ,SAAT,CAAmBuB,MAAnB,CAA0B,eAA1B;AACAjC,MAAAA,CAAC,CAACE,MAAF,CAASU,UAAT,CAAoBF,SAApB,CAA8BuB,MAA9B,CAAqC,aAArC;AACH,KAzEkB;;AAAA,SA0EnBpB,aA1EmB,GA0EH,CAACb,CAAD,EAAIqC,OAAO,GAAG,IAAd,KAAuB;AACnC,UAAIA,OAAJ,EAAa;AACTrC,QAAAA,CAAC,CAACqC,OAAF;AACH;;AACD,UAAIrC,CAAC,CAACE,MAAF,CAAS8B,KAAT,IAAkB,EAAtB,EAA0B;AACtB,aAAKD,YAAL,CAAkB/B,CAAlB;;AACA,gBAAQA,CAAC,CAACE,MAAF,CAASoC,IAAjB;AACI,eAAK,OAAL;AACI,iBAAKC,QAAL,CAAc;AACVC,cAAAA,aAAa,EAAE;AADL,aAAd;AAGA;;AACJ,eAAK,UAAL;AACI,iBAAKD,QAAL,CAAc;AACVE,cAAAA,gBAAgB,EAAE;AADR,aAAd;AAGA;;AACJ,eAAK,UAAL;AACI,iBAAKF,QAAL,CAAc;AACVG,cAAAA,gBAAgB,EAAE;AADR,aAAd;AAGA;;AACJ,eAAK,WAAL;AACI,iBAAKH,QAAL,CAAc;AACVI,cAAAA,iBAAiB,EAAE;AADT,aAAd;AAGA;AApBR;AAsBH,OAxBD,MAwBO;AACH,gBAAQ3C,CAAC,CAACE,MAAF,CAASoC,IAAjB;AACI,eAAK,OAAL;AACI/C,YAAAA,KAAK,CAACuB,IAAN,WAAcpB,OAAd,iBAAmC;AAC/BuB,cAAAA,KAAK,EAAEjB,CAAC,CAACE,MAAF,CAAS8B;AADe,aAAnC,EAEGb,IAFH,CAEQyB,CAAC,IAAI;AACT,mBAAKT,UAAL,CAAgBnC,CAAhB;AACA,mBAAKuC,QAAL,CAAc;AACVC,gBAAAA,aAAa,EAAE;AADL,eAAd;AAGH,aAPD,EAOGb,KAPH,CAOSkB,EAAE,IAAI;AACX,mBAAKd,YAAL,CAAkB/B,CAAlB;AACA,mBAAKuC,QAAL,CAAc;AACVC,gBAAAA,aAAa,EAAE;AADL,eAAd;AAGH,aAZD;AAaA;;AACJ,eAAK,UAAL;AACIjD,YAAAA,KAAK,CAACuB,IAAN,WAAcpB,OAAd,oBAAsC;AAClCqB,cAAAA,QAAQ,EAAEf,CAAC,CAACE,MAAF,CAAS8B;AADe,aAAtC,EAEGb,IAFH,CAEQyB,CAAC,IAAI;AACT,mBAAKT,UAAL,CAAgBnC,CAAhB;AACA,mBAAKuC,QAAL,CAAc;AACVE,gBAAAA,gBAAgB,EAAE;AADR,eAAd;AAGH,aAPD,EAOGd,KAPH,CAOSkB,EAAE,IAAI;AACX,mBAAKd,YAAL,CAAkB/B,CAAlB;AACA,mBAAKuC,QAAL,CAAc;AACVE,gBAAAA,gBAAgB,EAAE;AADR,eAAd;AAGH,aAZD;AAaA;;AACJ,eAAK,UAAL;AACI,gBAAI,KAAKzB,KAAL,CAAWE,QAAX,CAAoBT,MAApB,GAA6B,CAAjC,EAAoC;AAChC,mBAAKsB,YAAL,CAAkB/B,CAAlB;AACA,mBAAKuC,QAAL,CAAc;AACVG,gBAAAA,gBAAgB,EAAE;AADR,eAAd;AAGH,aALD,MAKO;AACH,mBAAKP,UAAL,CAAgBnC,CAAhB;AACA,mBAAKuC,QAAL,CAAc;AACVG,gBAAAA,gBAAgB,EAAE;AADR,eAAd;AAGH;;AACD;;AACJ,eAAK,WAAL;AACI,gBAAI,KAAK1B,KAAL,CAAW8B,SAAX,KAAyB,KAAK9B,KAAL,CAAWE,QAAxC,EAAkD;AAC9C,mBAAKa,YAAL,CAAkB/B,CAAlB;AACA,mBAAKuC,QAAL,CAAc;AACVI,gBAAAA,iBAAiB,EAAE;AADT,eAAd;AAGH,aALD,MAKO;AACH,mBAAKR,UAAL,CAAgBnC,CAAhB;AACA,mBAAKuC,QAAL,CAAc;AACVI,gBAAAA,iBAAiB,EAAE;AADT,eAAd;AAGH;;AACD;;AACJ;AACI,iBAAKR,UAAL,CAAgBnC,CAAhB;AA1DR;AA4DH;AACJ,KApKkB;;AAAA,SAsKnB+C,aAtKmB,GAsKH/C,CAAC,IAAI;AACjB,WAAKuC,QAAL,CAAc;AAAC,SAACvC,CAAC,CAACE,MAAF,CAASoC,IAAV,GAAiBtC,CAAC,CAACE,MAAF,CAAS8B;AAA3B,OAAd;;AACA,UAAGhC,CAAC,CAACE,MAAF,CAASoC,IAAT,KAAkB,UAArB,EAAgC;AAC5B,cAAMU,KAAK,GAAG,IAAIC,MAAJ,CAAW,eAAX,CAAd;AACA,cAAMC,GAAG,GAAGC,MAAM,CAACC,YAAP,CAAoB,CAACpD,CAAC,CAACqD,QAAH,GAAcrD,CAAC,CAACsD,KAAhB,GAAwBtD,CAAC,CAACqD,QAA9C,CAAZ;;AACA,YAAI,CAACL,KAAK,CAACO,IAAN,CAAWL,GAAX,CAAL,EAAsB;AAClBlD,UAAAA,CAAC,CAACC,cAAF;AACA,iBAAO,KAAP;AACH;AACJ;AACJ,KAhLkB;;AAEf,SAAKe,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,EADE;AAETF,MAAAA,QAAQ,EAAE,EAFD;AAGTG,MAAAA,QAAQ,EAAE,EAHD;AAIT4B,MAAAA,SAAS,EAAE,EAJF;AAKTN,MAAAA,aAAa,EAAE,EALN;AAMTC,MAAAA,gBAAgB,EAAE,EANT;AAOTC,MAAAA,gBAAgB,EAAE,EAPT;AAQTC,MAAAA,iBAAiB,EAAE;AARV,KAAb;AAUH;;AAsKDa,EAAAA,MAAM,GAAG;AACL,WACI,0CAEI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,OAAD;AAAS,MAAA,SAAS,EAAC,mDAAnB;AACS,MAAA,KAAK,EAAE;AAACC,QAAAA,SAAS,EAAE,GAAZ;AAAiBC,QAAAA,UAAU,EAAE,MAA7B;AAAqCC,QAAAA,WAAW,EAAE;AAAlD,OADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,aAAD;AAAe,MAAA,SAAS,EAAC,wCAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,OAAD;AAAS,MAAA,IAAI,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eADJ,CADJ,EAMI;AAAM,MAAA,SAAS,EAAE,kBAAjB;AAAqC,MAAA,UAAU,MAA/C;AAAgD,MAAA,QAAQ,EAAE,KAAK5D,aAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AACI,MAAA,KAAK,EAAC,iBADV;AAEI,MAAA,IAAI,EAAC,UAFT;AAGI,MAAA,KAAK,MAHT;AAII,MAAA,IAAI,EAAC,OAJT;AAKI,MAAA,KAAK,EAAE,KAAKiB,KAAL,CAAWC,KALtB;AAMI,MAAA,IAAI,EAAE,OANV;AAOI,MAAA,QAAQ,EAAE,KAAK8B,aAPnB;AAQI,MAAA,MAAM,EAAE,KAAKlC,aARjB;AASI,MAAA,OAAO,EAAE,KAAKuB,cATlB;AAUI,MAAA,EAAE,EAAE,OAVR;AAWI,MAAA,QAAQ,MAXZ;AAYI,MAAA,KAAK,EAAC,OAZV;AAaI,MAAA,OAAO,EAAC,OAbZ;AAcI,MAAA,QAAQ,MAdZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAgBI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKpB,KAAL,CAAWwB,aADhB,CAhBJ,EAmBI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAnBJ,CADJ,EAsBI,oBAAC,QAAD;AACI,MAAA,KAAK,EAAC,oBADV;AAEI,MAAA,IAAI,EAAC,MAFT;AAGI,MAAA,KAAK,MAHT;AAII,MAAA,QAAQ,EAAE,KAAKO,aAJnB;AAKI,MAAA,KAAK,EAAE,KAAK/B,KAAL,CAAWD,QALtB;AAMI,MAAA,IAAI,EAAE,UANV;AAOI,MAAA,MAAM,EAAE,KAAKF,aAPjB;AAQI,MAAA,OAAO,EAAE,KAAKuB,cARlB;AASI,MAAA,IAAI,EAAC,MATT;AAUI,MAAA,QAAQ,MAVZ;AAWI,MAAA,KAAK,EAAC,OAXV;AAYI,MAAA,OAAO,EAAC,OAZZ;AAaI,MAAA,QAAQ,MAbZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAeI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKpB,KAAL,CAAWyB,gBADhB,CAfJ,EAkBI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAlBJ,CAtBJ,EA0CI,oBAAC,QAAD;AACI,MAAA,KAAK,EAAC,oBADV;AAEI,MAAA,IAAI,EAAC,MAFT;AAGI,MAAA,KAAK,MAHT;AAII,MAAA,IAAI,EAAC,UAJT;AAKI,MAAA,QAAQ,MALZ;AAMI,MAAA,QAAQ,EAAE,KAAKM,aANnB;AAOI,MAAA,MAAM,EAAE,KAAKlC,aAPjB;AAQI,MAAA,OAAO,EAAE,KAAKuB,cARlB;AASI,MAAA,KAAK,EAAE,KAAKpB,KAAL,CAAWE,QATtB;AAUI,MAAA,IAAI,EAAE,UAVV;AAWI,MAAA,QAAQ,MAXZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAaI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKF,KAAL,CAAW0B,gBADhB,CAbJ,EAgBI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAhBJ,CA1CJ,EA4DI,oBAAC,QAAD;AACI,MAAA,KAAK,EAAC,uBADV;AAEI,MAAA,IAAI,EAAC,MAFT;AAGI,MAAA,KAAK,MAHT;AAII,MAAA,IAAI,EAAC,UAJT;AAKI,MAAA,QAAQ,EAAE,KAAKK,aALnB;AAMI,MAAA,MAAM,EAAE,KAAKlC,aANjB;AAOI,MAAA,OAAO,EAAE,KAAKuB,cAPlB;AAQI,MAAA,KAAK,EAAE,KAAKpB,KAAL,CAAW8B,SARtB;AASI,MAAA,IAAI,EAAE,WATV;AAUI,MAAA,QAAQ,MAVZ;AAWI,MAAA,QAAQ,MAXZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAaI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAK9B,KAAL,CAAW2B,iBADhB,CADJ,EAII;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAJJ,CAbJ,CA5DJ,CADJ,EAmFI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AACI,MAAA,KAAK,EAAC,YADV;AAEI,MAAA,SAAS,EAAC,MAFd;AAGI,MAAA,IAAI,EAAC,QAHT;AAII,MAAA,OAAO,EAAE,KAAK5C,aAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CAnFJ,CANJ,EAoGI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAoB,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAApB,CADJ,CADJ,CApGJ,CAFJ,CADJ,CADJ,CADJ,CAFJ,CADJ;AAyHH;;AA7SiD","sourcesContent":["import React from \"react\";\nimport {\n    MDBBtn,\n    MDBCard,\n    MDBCardBody,\n    MDBCardHeader,\n    MDBCol,\n    MDBContainer,\n    MDBIcon,\n    MDBInput,\n    MDBModalFooter,\n    MDBRow\n} from \"mdbreact\";\nimport {Link} from \"react-router-dom\";\nimport axios from \"axios\"\nimport {toast, ToastContainer} from 'react-toastify';\n\nimport {api_url} from \"../global\";\n\nexport default class Register extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: \"\",\n            username: \"\",\n            password: \"\",\n            cpassword: \"\",\n            emailfeedback: \"\",\n            usernamefeedback: \"\",\n            passwordfeedback: \"\",\n            cpasswordfeedback: \"\"\n        };\n    }\n\n    submitHandler = e => {\n        e.preventDefault();\n        e.target.className += \" was-validated\";\n        const input = document.querySelectorAll('form.needs-validation input');\n        let valid = true;\n        for (let i = 0; i < input.length; i++) {\n            const target = {\n                target: input[i]\n            };\n            if (input[i].classList.contains('invalid-input') || input[i].parentNode.classList.contains('invalid-input')) {\n                valid = false;\n            }\n            this.validateinput(target, false)\n        }\n        if (valid) {\n            axios.post(`${api_url}register`, {\n                username: this.state.username,\n                email: this.state.email,\n                password: this.state.password\n            }).then(async res => {\n                toast.success(res.data.message);\n                setTimeout(() => {\n                    this.props.history.push('/login')\n                },1000)\n            }).catch(err => {\n                toast.error(err.response.data.message)\n            })\n        }\n\n    };\n    invalidinput = (e, value = null) => {\n        if (e.target.parentNode.classList.contains('valid-div')) {\n            e.target.parentNode.classList.remove('valid-div')\n        }\n        if (e.target.classList.contains('valid-input')) {\n            e.target.classList.remove('valid-input')\n        }\n        e.target.classList.add('invalid-input');\n        e.target.parentNode.classList.add('invalid-div');\n        if (value !== null) {\n            e.target.value = value\n        }\n    };\n    validinput = (e, value = null) => {\n        if (e.target.parentNode.classList.contains('invalid-div')) {\n            e.target.parentNode.classList.remove('invalid-div')\n        }\n        if (e.target.classList.contains('invalid-input')) {\n            e.target.classList.remove('invalid-input')\n        }\n        e.target.classList.add('valid-input');\n        e.target.parentNode.classList.add('valid-div');\n        if (value !== null) {\n            e.target.value = value\n        }\n    };\n    removevalidate = e => {\n        e.target.classList.remove('invalid-input');\n        e.target.parentNode.classList.remove('invalid-div')\n    };\n    validateinput = (e, persist = true) => {\n        if (persist) {\n            e.persist();\n        }\n        if (e.target.value == \"\") {\n            this.invalidinput(e);\n            switch (e.target.name) {\n                case \"email\":\n                    this.setState({\n                        emailfeedback: \"Email required\"\n                    });\n                    break;\n                case \"username\":\n                    this.setState({\n                        usernamefeedback: \"Username must be filled\"\n                    });\n                    break;\n                case \"password\":\n                    this.setState({\n                        passwordfeedback: \"Password can't Empty\"\n                    });\n                    break;\n                case \"cpassword\":\n                    this.setState({\n                        cpasswordfeedback: \"Please Confirm Your Password\"\n                    });\n                    break;\n            }\n        } else {\n            switch (e.target.name) {\n                case \"email\":\n                    axios.post(`${api_url}checkemail`, {\n                        email: e.target.value\n                    }).then(r => {\n                        this.validinput(e);\n                        this.setState({\n                            emailfeedback: \"\"\n                        })\n                    }).catch(er => {\n                        this.invalidinput(e);\n                        this.setState({\n                            emailfeedback: \"Email Has been taken\"\n                        })\n                    });\n                    break;\n                case \"username\":\n                    axios.post(`${api_url}checkusername`, {\n                        username: e.target.value\n                    }).then(r => {\n                        this.validinput(e);\n                        this.setState({\n                            usernamefeedback: \"\"\n                        })\n                    }).catch(er => {\n                        this.invalidinput(e);\n                        this.setState({\n                            usernamefeedback: \"Username Has been taken\"\n                        })\n                    });\n                    break;\n                case \"password\":\n                    if (this.state.password.length < 6) {\n                        this.invalidinput(e);\n                        this.setState({\n                            passwordfeedback: \"Password Must be At Least 6 Characters\"\n                        })\n                    } else {\n                        this.validinput(e);\n                        this.setState({\n                            passwordfeedback: \"\"\n                        })\n                    }\n                    break;\n                case \"cpassword\":\n                    if (this.state.cpassword !== this.state.password) {\n                        this.invalidinput(e);\n                        this.setState({\n                            cpasswordfeedback: \"Password doesn't match\"\n                        })\n                    } else {\n                        this.validinput(e);\n                        this.setState({\n                            cpasswordfeedback: \"\"\n                        })\n                    }\n                    break;\n                default:\n                    this.validinput(e)\n            }\n        }\n    };\n\n    changeHandler = e => {\n        this.setState({[e.target.name]: e.target.value});\n        if(e.target.name === \"username\"){\n            const regex = new RegExp(\"^[a-zA-Z0-9]$\");\n            const key = String.fromCharCode(!e.charCode ? e.which : e.charCode);\n            if (!regex.test(key)) {\n                e.preventDefault();\n                return false;\n            }\n        }\n    };\n\n    render() {\n        return (\n            <>\n\n                <MDBContainer>\n                    <MDBRow>\n                        <MDBCol md=\"12\">\n                            <MDBCard className=\"d-flex justify-content-center w-50 form-container\"\n                                     style={{marginTop: 100, marginLeft: 'auto', marginRight: 'auto'}}>\n                                <MDBCardBody>\n                                    <MDBCardHeader className=\"form-header deep-blue-gradient rounded\">\n                                        <h3 className=\"my-3\">\n                                            <MDBIcon icon=\"lock\"/> Register:\n                                        </h3>\n                                    </MDBCardHeader>\n                                    <form className={\"needs-validation\"} noValidate onSubmit={this.submitHandler}>\n                                        <div className=\"grey-text\">\n                                            <MDBInput\n                                                label=\"Type your email\"\n                                                icon=\"envelope\"\n                                                group\n                                                type=\"email\"\n                                                value={this.state.email}\n                                                name={\"email\"}\n                                                onChange={this.changeHandler}\n                                                onBlur={this.validateinput}\n                                                onFocus={this.removevalidate}\n                                                id={\"email\"}\n                                                validate\n                                                error=\"wrong\"\n                                                success=\"right\"\n                                                required\n                                            >\n                                                <div className=\"invalid-feedback\">\n                                                    {this.state.emailfeedback}\n                                                </div>\n                                                <div className=\"valid-feedback\">Email Available!</div>\n                                            </MDBInput>\n                                            <MDBInput\n                                                label=\"Type your Username\"\n                                                icon=\"user\"\n                                                group\n                                                onChange={this.changeHandler}\n                                                value={this.state.username}\n                                                name={\"username\"}\n                                                onBlur={this.validateinput}\n                                                onFocus={this.removevalidate}\n                                                type=\"text\"\n                                                validate\n                                                error=\"wrong\"\n                                                success=\"right\"\n                                                required\n                                            >\n                                                <div className=\"invalid-feedback\">\n                                                    {this.state.usernamefeedback}\n                                                </div>\n                                                <div className=\"valid-feedback\">Username Available!</div>\n                                            </MDBInput>\n                                            <MDBInput\n                                                label=\"Type your password\"\n                                                icon=\"lock\"\n                                                group\n                                                type=\"password\"\n                                                validate\n                                                onChange={this.changeHandler}\n                                                onBlur={this.validateinput}\n                                                onFocus={this.removevalidate}\n                                                value={this.state.password}\n                                                name={\"password\"}\n                                                required\n                                            >\n                                                <div className=\"invalid-feedback\">\n                                                    {this.state.passwordfeedback}\n                                                </div>\n                                                <div className=\"valid-feedback\">Password Valid!</div>\n                                            </MDBInput>\n                                            <MDBInput\n                                                label=\"Confirm your password\"\n                                                icon=\"lock\"\n                                                group\n                                                type=\"password\"\n                                                onChange={this.changeHandler}\n                                                onBlur={this.validateinput}\n                                                onFocus={this.removevalidate}\n                                                value={this.state.cpassword}\n                                                name={\"cpassword\"}\n                                                validate\n                                                required\n                                            >\n                                                <div className=\"comments\">\n                                                    <div className=\"invalid-feedback\">\n                                                        {this.state.cpasswordfeedback}\n                                                    </div>\n                                                    <div className=\"valid-feedback\">Password Match!</div>\n                                                </div>\n                                            </MDBInput>\n                                        </div>\n\n                                        <div className=\"text-center mt-4\">\n                                            <MDBBtn\n                                                color=\"light-blue\"\n                                                className=\"mb-3\"\n                                                type=\"button\"\n                                                onClick={this.submitHandler}\n                                            >\n                                                Register\n                                            </MDBBtn>\n                                        </div>\n                                    </form>\n                                    <MDBModalFooter>\n                                        <div className=\"font-weight-light\">\n                                            <p>Have an account? <Link to=\"login\">Sign In</Link></p>\n                                            {/*<p><Link to=\"\">Forgot Password?</Link></p>*/}\n                                        </div>\n                                    </MDBModalFooter>\n                                </MDBCardBody>\n                            </MDBCard>\n                        </MDBCol>\n                    </MDBRow>\n                </MDBContainer>\n            </>\n        );\n    }\n\n}\n"]},"metadata":{},"sourceType":"module"}