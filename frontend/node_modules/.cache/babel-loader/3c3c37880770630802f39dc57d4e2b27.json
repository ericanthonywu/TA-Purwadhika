{"ast":null,"code":"var _jsxFileName = \"/Users/ericanthonywu/Projects/TA-Purwadhika/frontend/src/views/ShowPost.jsx\";\nimport React from 'react';\nimport Post from \"./template/Post\";\nimport axios from 'axios';\nimport { api_url } from \"../global\";\nimport Error404 from \"./template/404\";\nimport moment from \"moment\";\nimport { connect } from 'react-redux';\nimport { MDBCol, MDBContainer, MDBRow } from \"mdbreact\";\n\nclass ShowPost extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      post: {},\n      isLoading: true,\n      notFound: false\n    };\n  }\n\n  componentDidMount() {\n    axios.post(\"\".concat(api_url, \"showPost\"), {\n      id: this.props.match.params.postid\n    }).then(res => {\n      this.setState({\n        post: res.data.post,\n        isLoading: false\n      });\n    }).catch(err => {\n      console.log(err);\n      this.setState({\n        isLoading: false,\n        notFound: true\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(MDBContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(MDBRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(MDBCol, {\n      size: 9,\n      style: {\n        margin: \"auto\",\n        paddingTop: 100\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, this.state.isLoading ? React.createElement(\"div\", {\n      className: \"container-loading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"spinner-grow text-warning\",\n      role: \"status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"sr-only\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Loading...\")), React.createElement(\"div\", {\n      className: \"spinner-grow text-primary\",\n      role: \"status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"sr-only\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Loading...\")), React.createElement(\"div\", {\n      className: \"spinner-grow text-default\",\n      role: \"status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"sr-only\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Loading...\"))) : this.state.notFound ? React.createElement(Error404, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }) : React.createElement(Post, Object.assign({\n      _id: this.state.post._id,\n      postusername: this.state.post.user.username,\n      posttime: moment(this.state.post.createdAt).fromNow(),\n      postprofilepicture: this.state.post.user.profilepicture,\n      postcaption: this.state.post.caption,\n      totalcomment: this.state.post.comments.length,\n      likeslist: this.state.post.like,\n      postlikes: this.state.post.like.length,\n      likestatus: this.state.post.like.some(e => e._id === this.props.id),\n      postimages: this.state.post.image,\n      comments: this.state.post.comments\n    }, this.props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nconst mapToStateProps = state => {\n  return {\n    id: state.user._id\n  };\n};\n\nexport default connect(mapToStateProps)(ShowPost);","map":{"version":3,"sources":["/Users/ericanthonywu/Projects/TA-Purwadhika/frontend/src/views/ShowPost.jsx"],"names":["React","Post","axios","api_url","Error404","moment","connect","MDBCol","MDBContainer","MDBRow","ShowPost","Component","constructor","props","state","post","isLoading","notFound","componentDidMount","id","match","params","postid","then","res","setState","data","catch","err","console","log","render","margin","paddingTop","_id","user","username","createdAt","fromNow","profilepicture","caption","comments","length","like","some","e","image","mapToStateProps"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Post from \"./template/Post\";\nimport axios from 'axios'\nimport {api_url} from \"../global\";\nimport Error404 from \"./template/404\";\nimport moment from \"moment\";\nimport {connect} from 'react-redux'\nimport {MDBCol, MDBContainer, MDBRow} from \"mdbreact\";\n\nclass ShowPost extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            post: {},\n            isLoading: true,\n            notFound: false\n        }\n    }\n\n    componentDidMount() {\n        axios.post(`${api_url}showPost`, {\n            id: this.props.match.params.postid,\n        }).then(res => {\n            this.setState({\n                post: res.data.post,\n                isLoading: false\n            })\n        }).catch(err => {\n            console.log(err);\n            this.setState({\n                isLoading: false,\n                notFound: true\n            })\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <MDBContainer>\n                    <MDBRow>\n                        <MDBCol size={9} style={{margin:\"auto\",paddingTop: 100}}>\n                            {\n                                this.state.isLoading ?\n                                    <div className={\"container-loading\"}>\n                                        <div className=\"spinner-grow text-warning\" role=\"status\">\n                                            <span className=\"sr-only\">Loading...</span>\n                                        </div>\n                                        <div className=\"spinner-grow text-primary\" role=\"status\">\n                                            <span className=\"sr-only\">Loading...</span>\n                                        </div>\n                                        <div className=\"spinner-grow text-default\" role=\"status\">\n                                            <span className=\"sr-only\">Loading...</span>\n                                        </div>\n                                    </div>\n                                    :\n                                    (\n                                        this.state.notFound ?\n                                            <Error404/>\n                                            :\n                                            <Post\n                                                _id={this.state.post._id}\n                                                postusername={this.state.post.user.username}\n                                                posttime={moment(this.state.post.createdAt).fromNow()}\n                                                postprofilepicture={this.state.post.user.profilepicture}\n                                                postcaption={this.state.post.caption}\n                                                totalcomment={this.state.post.comments.length}\n                                                likeslist={this.state.post.like}\n                                                postlikes={this.state.post.like.length}\n                                                likestatus={this.state.post.like.some(e => e._id === this.props.id)}\n                                                postimages={this.state.post.image}\n                                                comments={this.state.post.comments}\n                                                {...this.props}\n                                            />\n                                    )\n                            }\n                        </MDBCol>\n                    </MDBRow>\n                </MDBContainer>\n\n            </div>\n        )\n    }\n}\n\nconst mapToStateProps = state => {\n    return {\n        id: state.user._id\n    }\n}\n\nexport default connect(mapToStateProps)(ShowPost)\n"]},"metadata":{},"sourceType":"module"}