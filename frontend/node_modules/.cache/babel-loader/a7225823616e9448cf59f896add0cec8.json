{"ast":null,"code":"var _jsxFileName = \"/Users/ericanthonywu/Projects/TA-Purwadhika/frontend/src/views/UpdateProfile.jsx\";\nimport React from 'react';\nimport { MDBBtn, MDBCard, MDBCardBody, MDBCardHeader, MDBCol, MDBContainer, MDBIcon, MDBInput, MDBModalFooter, MDBRow } from \"mdbreact\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { api_url, profile_url } from \"../global\";\nimport { Picker } from \"emoji-mart\";\nimport axios from 'axios';\nimport { toast } from \"react-toastify\";\nimport { updateProfile } from \"../redux/actions\";\n\nclass UpdateProfile extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.changeHandler = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.submitHandler = e => {\n      e.preventDefault();\n      const formData = new FormData();\n      formData.append('token', this.props.token);\n      formData.append('email', this.state.email || this.state.userData.email);\n      formData.append('nickname', this.state.nickname || this.state.userData.nickname);\n      formData.append('bio', this.state.bio || this.state.userData.bio);\n      formData.append('file', this.state.file);\n      axios.post(\"\".concat(api_url, \"updateProfile\"), formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data;charset=utf-8\"\n        }\n      }).then(res => {\n        toast.success(\"Profile Updated\");\n        localStorage.setItem('profile_picture', res.data.data);\n\n        if (res.data.data) {\n          this.props.updateProfile({\n            profilepicture: res.data.data\n          });\n        }\n      }).catch(err => {\n        toast.error(\"An error occurred\");\n      });\n    };\n\n    this.togglesticker = () => {\n      if (!this.state.showsticker) {\n        // attach/remove event handler\n        document.addEventListener('click', this.handleOutsideClick, false);\n        document.onkeydown = this.handleOutsideClick;\n      } else {\n        document.removeEventListener('click', this.handleOutsideClick, false);\n        document.onkeydown = this.handleOutsideClick;\n      }\n\n      this.setState({\n        showsticker: !this.state.showsticker\n      });\n    };\n\n    this.addEmoji = e => {\n      const emoji = e.native;\n      this.setState({\n        bio: this.state.bio += emoji\n      });\n      this.refs.biolabel.classList.add('active');\n    };\n\n    this.handlebio = e => {\n      this.setState({\n        bio: e.target.value\n      });\n    };\n\n    this.fileChosen = e => {\n      this.setState({\n        file: e.target.files[0]\n      });\n      const reader = new FileReader();\n      reader.readAsDataURL(e.target.files[0]);\n\n      reader.onloadend = e => {\n        this.setState({\n          showFile: reader.result\n        });\n      };\n    };\n\n    this.state = {\n      showsticker: false,\n      bio: \"\",\n      email: \"\",\n      nickname: \"\",\n      file: \"\",\n      showFile: \"\",\n      isLoading: true,\n      notFound: false,\n      userData: {}\n    };\n    this.handleOutsideClick = this.handleOutsideClick.bind(this);\n    this.togglesticker = this.togglesticker.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.token) {\n      axios.post(\"\".concat(api_url, \"showProfile\"), {\n        token: this.props.token\n      }).then(res => {\n        this.setState({\n          userData: res.data.data,\n          isLoading: false,\n          bio: res.data.data.bio\n        });\n      }).catch(err => {\n        this.setState({\n          isLoading: false\n        });\n        console.log(err);\n      });\n    }\n  }\n\n  handleOutsideClick(e) {\n    // ignore clicks on the component itself\n    if (document.querySelector('section.emoji-mart') !== null) {\n      this.setState({\n        showsticker: !document.querySelector('section.emoji-mart').contains(e.target) || e.key === \"Escape\"\n      });\n      this.togglesticker();\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, this.state.isLoading ? React.createElement(\"div\", {\n      className: \"container-loading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"spinner-grow text-warning\",\n      role: \"status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"sr-only\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"Loading...\")), React.createElement(\"div\", {\n      className: \"spinner-grow text-primary\",\n      role: \"status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"sr-only\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"Loading...\")), React.createElement(\"div\", {\n      className: \"spinner-grow text-default\",\n      role: \"status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"sr-only\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"Loading...\"))) : React.createElement(MDBContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(MDBRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(MDBCol, {\n      md: \"12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(MDBCard, {\n      className: \"d-flex justify-content-center w-50 form-container\",\n      style: {\n        marginTop: 100,\n        marginLeft: 'auto',\n        marginRight: 'auto'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(MDBCardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(MDBCardHeader, {\n      className: \"form-header deep-blue-gradient rounded\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"my-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(MDBIcon, {\n      icon: \"user\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }), \" Update Profile\")), React.createElement(\"form\", {\n      onSubmit: this.submitHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"grey-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"md-form form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"profilepicture\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.showFile || profile_url + this.props.profilepicture,\n      width: \"100%\",\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      onClick: () => this.refs.cgprofile.click(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(MDBIcon, {\n      icon: \"camera\",\n      className: \"change-camera\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"file\",\n      ref: \"cgprofile\",\n      onChange: this.fileChosen,\n      accept: \"image/*\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }))), React.createElement(MDBInput, {\n      label: \"Email\",\n      name: \"email\",\n      icon: \"envelope\",\n      group: true,\n      type: \"email\",\n      validate: true,\n      error: \"wrong\",\n      success: \"right\",\n      onChange: this.changeHandler,\n      value: this.state.email || this.state.userData.email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }), React.createElement(MDBInput, {\n      label: \"Nickname \",\n      name: \"nickname\",\n      icon: \"user\",\n      group: true,\n      type: \"text\",\n      validate: true,\n      error: \"wrong\",\n      success: \"right\",\n      onChange: this.changeHandler,\n      value: this.state.nickname || this.state.userData.nickname,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"md-form form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"md-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, this.state.showsticker && React.createElement(\"div\", {\n      className: \"emoji-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(Picker, {\n      set: \"emojione\",\n      title: \"Choose Sticker\",\n      onSelect: this.addEmoji,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    })), React.createElement(\"textarea\", {\n      style: {\n        paddingTop: 12\n      },\n      className: \"md-textarea comment-textarea form-control\",\n      onBlur: e => !e.target.value.length && this.refs.biolabel.classList.remove('active'),\n      onFocus: () => this.refs.biolabel.classList.add('active'),\n      id: \"bio\",\n      name: \"bio\",\n      onChange: this.handlebio,\n      value: this.state.bio || this.state.userData.bio,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, this.state.bio), React.createElement(\"label\", {\n      htmlFor: \"bio\",\n      ref: \"biolabel\",\n      className: this.state.bio || this.state.userData.bio ? \"active\" : \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, \"Bio\"), React.createElement(MDBBtn, {\n      className: \"sticker\",\n      onClick: this.togglesticker,\n      size: \"lg\",\n      gradient: \"purple\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(MDBIcon, {\n      far: true,\n      icon: \"laugh-beam\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }))))), React.createElement(\"div\", {\n      className: \"text-center mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, React.createElement(MDBBtn, {\n      color: \"light-blue\",\n      className: \"mb-3\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, \"Update Profile\"))), React.createElement(MDBModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nconst mapToStateProps = state => {\n  return {\n    token: state.user.token,\n    username: state.user.username,\n    profilepicture: state.user.profilepicture\n  };\n};\n\nexport default connect(mapToStateProps, {\n  updateProfile\n})(UpdateProfile);","map":{"version":3,"sources":["/Users/ericanthonywu/Projects/TA-Purwadhika/frontend/src/views/UpdateProfile.jsx"],"names":["React","MDBBtn","MDBCard","MDBCardBody","MDBCardHeader","MDBCol","MDBContainer","MDBIcon","MDBInput","MDBModalFooter","MDBRow","Link","connect","api_url","profile_url","Picker","axios","toast","updateProfile","UpdateProfile","Component","constructor","props","changeHandler","e","setState","target","name","value","submitHandler","preventDefault","formData","FormData","append","token","state","email","userData","nickname","bio","file","post","headers","then","res","success","localStorage","setItem","data","profilepicture","catch","err","error","togglesticker","showsticker","document","addEventListener","handleOutsideClick","onkeydown","removeEventListener","addEmoji","emoji","native","refs","biolabel","classList","add","handlebio","fileChosen","files","reader","FileReader","readAsDataURL","onloadend","showFile","result","isLoading","notFound","bind","componentDidMount","console","log","querySelector","contains","key","render","marginTop","marginLeft","marginRight","cgprofile","click","paddingTop","length","remove","mapToStateProps","user","username"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {\n    MDBBtn,\n    MDBCard,\n    MDBCardBody,\n    MDBCardHeader,\n    MDBCol,\n    MDBContainer,\n    MDBIcon,\n    MDBInput,\n    MDBModalFooter,\n    MDBRow\n} from \"mdbreact\";\nimport {Link} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {api_url, profile_url} from \"../global\";\nimport {Picker} from \"emoji-mart\";\nimport axios from 'axios'\nimport {toast} from \"react-toastify\";\nimport {updateProfile} from \"../redux/actions\";\n\nclass UpdateProfile extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showsticker: false,\n            bio: \"\",\n            email: \"\",\n            nickname: \"\",\n            file: \"\",\n            showFile: \"\",\n            isLoading: true,\n            notFound: false,\n            userData: {}\n        };\n        this.handleOutsideClick = this.handleOutsideClick.bind(this);\n        this.togglesticker = this.togglesticker.bind(this)\n    }\n\n    componentDidMount() {\n        if (this.props.token) {\n            axios.post(`${api_url}showProfile`, {\n                token: this.props.token\n            }).then(res => {\n                this.setState({\n                    userData: res.data.data,\n                    isLoading: false,\n                    bio: res.data.data.bio\n                });\n            }).catch(err => {\n                this.setState({\n                    isLoading: false\n                });\n                console.log(err)\n            })\n        }\n    }\n\n    changeHandler = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    };\n    submitHandler = e => {\n        e.preventDefault();\n        const formData = new FormData();\n        formData.append('token', this.props.token);\n        formData.append('email', this.state.email || this.state.userData.email);\n        formData.append('nickname', this.state.nickname || this.state.userData.nickname);\n        formData.append('bio', this.state.bio || this.state.userData.bio);\n        formData.append('file', this.state.file);\n        axios.post(`${api_url}updateProfile`, formData, {\n            headers: {\n                \"Content-Type\": \"multipart/form-data;charset=utf-8\"\n            }\n        }).then(res => {\n            toast.success(\"Profile Updated\");\n            localStorage.setItem('profile_picture', res.data.data);\n            if(res.data.data) {\n                this.props.updateProfile({\n                    profilepicture: res.data.data\n                })\n            }\n        }).catch(err => {\n            toast.error(\"An error occurred\")\n        })\n    };\n\n    handleOutsideClick(e) {\n        // ignore clicks on the component itself\n        if (document.querySelector('section.emoji-mart') !== null) {\n            this.setState({\n                showsticker: !document.querySelector('section.emoji-mart').contains(e.target) || e.key === \"Escape\"\n            });\n            this.togglesticker()\n        }\n    }\n\n    togglesticker = () => {\n        if (!this.state.showsticker) {\n            // attach/remove event handler\n            document.addEventListener('click', this.handleOutsideClick, false);\n            document.onkeydown = this.handleOutsideClick\n        } else {\n            document.removeEventListener('click', this.handleOutsideClick, false);\n            document.onkeydown = this.handleOutsideClick\n        }\n        this.setState({\n            showsticker: !this.state.showsticker\n        })\n    };\n    addEmoji = e => {\n        const emoji = e.native;\n        this.setState({\n            bio: this.state.bio += emoji,\n        });\n        this.refs.biolabel.classList.add('active')\n    };\n    handlebio = e => {\n        this.setState({\n            bio: e.target.value\n        })\n    };\n    fileChosen = e => {\n        this.setState({\n            file: e.target.files[0]\n        });\n        const reader = new FileReader();\n        reader.readAsDataURL(e.target.files[0]);\n        reader.onloadend = e => {\n            this.setState({\n                showFile: reader.result\n            })\n        }\n    };\n\n    render() {\n        return (\n            <div>\n                {\n                    this.state.isLoading ?\n                        <div className={\"container-loading\"}>\n                            <div className=\"spinner-grow text-warning\" role=\"status\">\n                                <span className=\"sr-only\">Loading...</span>\n                            </div>\n                            <div className=\"spinner-grow text-primary\" role=\"status\">\n                                <span className=\"sr-only\">Loading...</span>\n                            </div>\n                            <div className=\"spinner-grow text-default\" role=\"status\">\n                                <span className=\"sr-only\">Loading...</span>\n                            </div>\n                        </div>\n                        :\n                        <MDBContainer>\n                            <MDBRow>\n                                <MDBCol md=\"12\">\n                                    <MDBCard className=\"d-flex justify-content-center w-50 form-container\"\n                                             style={{marginTop: 100, marginLeft: 'auto', marginRight: 'auto'}}>\n                                        <MDBCardBody>\n                                            <MDBCardHeader className=\"form-header deep-blue-gradient rounded\">\n                                                <h3 className=\"my-3\">\n                                                    <MDBIcon icon=\"user\"/> Update\n                                                    Profile\n                                                </h3>\n                                            </MDBCardHeader>\n                                            <form onSubmit={this.submitHandler}>\n                                                <div className=\"grey-text\">\n                                                    <div className=\"md-form form-group\">\n                                                        <div className=\"profilepicture\">\n                                                            <img\n                                                                src={this.state.showFile || profile_url + this.props.profilepicture}\n                                                                width={\"100%\"} alt=\"\"/>\n                                                            <span onClick={() => this.refs.cgprofile.click()}><MDBIcon\n                                                                icon={\"camera\"} className={\"change-camera\"}/></span>\n                                                            <input type=\"file\" ref={\"cgprofile\"}\n                                                                   onChange={this.fileChosen}\n                                                                   accept={\"image/*\"}/>\n                                                        </div>\n                                                    </div>\n                                                    <MDBInput\n                                                        label=\"Email\"\n                                                        name={\"email\"}\n                                                        icon=\"envelope\"\n                                                        group\n                                                        type=\"email\"\n                                                        validate\n                                                        error=\"wrong\"\n                                                        success=\"right\"\n                                                        onChange={this.changeHandler}\n                                                        value={this.state.email || this.state.userData.email}\n                                                    />\n                                                    <MDBInput\n                                                        label=\"Nickname \"\n                                                        name={\"nickname\"}\n                                                        icon=\"user\"\n                                                        group\n                                                        type=\"text\"\n                                                        validate\n                                                        error=\"wrong\"\n                                                        success=\"right\"\n                                                        onChange={this.changeHandler}\n                                                        value={this.state.nickname || this.state.userData.nickname}\n                                                    />\n                                                    <div className=\"md-form form-group\">\n                                                        <div className=\"md-form\">\n                                                            {this.state.showsticker &&\n                                                            <div className={\"emoji-container\"}>\n                                                                <Picker set='emojione' title={\"Choose Sticker\"}\n                                                                        onSelect={this.addEmoji}/>\n                                                            </div>}\n                                                            <textarea style={{paddingTop: 12}}\n                                                                      className={\"md-textarea comment-textarea form-control\"}\n                                                                      onBlur={e => !e.target.value.length && this.refs.biolabel.classList.remove('active')}\n                                                                      onFocus={() => this.refs.biolabel.classList.add('active')}\n                                                                      id={\"bio\"}\n                                                                      name={\"bio\"}\n                                                                      onChange={this.handlebio}\n                                                                      value={this.state.bio || this.state.userData.bio }\n                                                            >\n                                                    {this.state.bio}\n                                                </textarea>\n                                                            <label htmlFor=\"bio\" ref={\"biolabel\"} className={(this.state.bio || this.state.userData.bio) ? \"active\" : \"\"}>Bio</label>\n                                                            <MDBBtn className={\"sticker\"}\n                                                                    onClick={this.togglesticker} size=\"lg\"\n                                                                    gradient=\"purple\"><MDBIcon\n                                                                far icon=\"laugh-beam\"/></MDBBtn>\n                                                        </div>\n                                                    </div>\n                                                </div>\n\n                                                <div className=\"text-center mt-4\">\n                                                    <MDBBtn\n                                                        color=\"light-blue\"\n                                                        className=\"mb-3\"\n                                                        type=\"submit\"\n                                                    >\n                                                        Update Profile\n                                                    </MDBBtn>\n                                                </div>\n                                            </form>\n                                            <MDBModalFooter>\n\n                                            </MDBModalFooter>\n                                        </MDBCardBody>\n                                    </MDBCard>\n                                </MDBCol>\n                            </MDBRow>\n                        </MDBContainer>\n                }\n            </div>\n        )\n    }\n}\n\nconst mapToStateProps = state => {\n    return {\n        token: state.user.token,\n        username: state.user.username,\n        profilepicture: state.user.profilepicture\n    }\n};\n\nexport default connect(mapToStateProps,{updateProfile})(UpdateProfile)\n"]},"metadata":{},"sourceType":"module"}