{"ast":null,"code":"var _jsxFileName = \"/Users/ericanthonywu/Projects/TA-Purwadhika/frontend/src/views/Profile.jsx\";\nimport React from \"react\";\nimport { MDBCol, MDBContainer, MDBRow, MDBBtn, MDBIcon, MDBModalHeader, MDBModalBody, MDBModalFooter, MDBModal, MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem, MDBDropdown } from \"mdbreact\";\nimport axios from 'axios';\nimport { logout } from \"../redux/actions\";\nimport { connect } from 'react-redux';\nimport Post from './template/Post';\nimport Error404 from \"./template/404\";\nimport { api_url, followformat, post_url, profile_url } from \"../global\";\nimport moment from \"moment\";\nimport { toast } from \"react-toastify\";\n\nclass Profile extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.report = e => this.setState({\n      reportModal: true\n    });\n\n    this.toggleReport = () => this.setState({\n      reportModal: !this.state.reportModal\n    });\n\n    this.onClick = nr => {\n      this.setState({\n        reportOption: nr\n      });\n    };\n\n    this.sendReport = e => {\n      if (this.state.reportOption || this.state.reportOption === 7 && !this.state.reportOther) {\n        let radioMeans = '';\n\n        switch (this.state.reportOption) {\n          case 1:\n            radioMeans = \"Its spam or inappropriate\";\n            break;\n\n          case 2:\n            radioMeans = \"Posting inappropriate content\";\n            break;\n\n          case 3:\n            radioMeans = \"Posting spam\";\n            break;\n\n          case 4:\n            radioMeans = \"Posting annoying content\";\n            break;\n\n          case 5:\n            radioMeans = \"This profile pretending to be someone else\";\n            break;\n\n          case 6:\n            radioMeans = \"Might be posting my intellectual property without authorization\";\n            break;\n\n          case 7:\n            radioMeans = this.state.reportOther;\n            break;\n        }\n\n        axios.post(\"\".concat(api_url, \"reportUser\"), {\n          token: this.props.token || localStorage.getItem('token'),\n          report: radioMeans,\n          userId: this.state.user._id\n        }).then(r => toast.success(\"User reported! \")).catch(err => toast.error(\"You already report this user\"));\n        this.setState({\n          reportModal: false\n        });\n      }\n    };\n\n    this.follow = () => {\n      axios.post(\"\".concat(api_url, \"follow\"), {\n        token: this.props.token,\n        userid: this.props.userid,\n        userTarget: this.state.user._id\n      }).then(res => {\n        // console.log(this.state.follower)\n        this.setState({\n          follower: [...this.state.follower, {\n            username: this.props.username,\n            profilepicture: this.props.profilepicture,\n            _id: this.props.userid\n          }]\n        }); // console.log(this.state.follower)\n      });\n    };\n\n    this.unFollow = () => {\n      axios.post(\"\".concat(api_url, \"unfollow\"), {\n        token: this.props.token,\n        userid: this.props.userid,\n        userTarget: this.state.user._id\n      }).then(res => {\n        this.setState({\n          follower: this.state.follower.filter(o => {\n            return o._id !== this.props.userid;\n          })\n        });\n      });\n    };\n\n    this.followStatus = () => this.props.match.params.profile === this.props.username ? React.createElement(MDBBtn, {\n      className: \"waves-effect\",\n      outline: true,\n      color: \"elegant\",\n      onClick: () => this.props.history.push('/updateProfile'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \" Edit Profile \") : this.state.follower.some(e => e._id === this.props.userid) ? React.createElement(MDBBtn, {\n      className: \"waves-effect\",\n      outline: true,\n      color: \"primary\",\n      onClick: this.unFollow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \" Following \") : this.state.user.following.some(e => e._id === this.props.userid) ? React.createElement(MDBBtn, {\n      className: \"waves-effect\",\n      color: \"primary\",\n      onClick: this.follow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Follow Back\") : React.createElement(MDBBtn, {\n      className: \"waves-effect\",\n      color: \"primary\",\n      onClick: this.follow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \" Follow \");\n\n    this.state = {\n      user: {},\n      post: [],\n      isLoading: true,\n      notFound: false,\n      follower: [],\n      showFollower: false,\n      showFollowing: false,\n      postDetail: {\n        user: {\n          username: \"\"\n        },\n        comments: [],\n        like: []\n      },\n      reportModal: false,\n      reportOption: 0,\n      reportOther: \"\"\n    };\n  }\n\n  componentDidMount() {\n    const profile = this.props.match.params.profile;\n\n    if (this.props.token) {\n      axios.post(\"\".concat(api_url, \"getprofile\"), {\n        token: this.props.token,\n        username: profile\n      }).then(res => {\n        this.setState({\n          user: res.data.user,\n          follower: res.data.user.follower,\n          post: res.data.post,\n          isLoading: false\n        });\n      }).catch(err => {\n        console.log(err);\n        this.setState({\n          isLoading: false,\n          notFound: true\n        });\n      });\n    } else {\n      this.setState({\n        isLoading: false,\n        notFound: true\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, this.state.isLoading ? React.createElement(\"div\", {\n      className: \"container-loading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"spinner-grow text-warning\",\n      role: \"status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"sr-only\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, \"Loading...\")), React.createElement(\"div\", {\n      className: \"spinner-grow text-primary\",\n      role: \"status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"sr-only\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, \"Loading...\")), React.createElement(\"div\", {\n      className: \"spinner-grow text-default\",\n      role: \"status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"sr-only\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \"Loading...\"))) : this.state.notFound ? React.createElement(Error404, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      style: {\n        paddingTop: 100\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(MDBModal, {\n      isOpen: this.state.reportModal,\n      toggle: () => this.toggleReport(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(MDBModalHeader, {\n      toggle: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, \"Report Post\"), React.createElement(MDBModalBody, {\n      className: \"text-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, React.createElement(MDBContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, \"What are your reason for reporting this post?\", React.createElement(\"div\", {\n      className: \"custom-control custom-radio\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"radio\",\n      className: \"custom-control-input\",\n      id: \"ck1\",\n      name: \"report\",\n      onClick: () => this.onClick(1),\n      checked: this.state.reportOption === 1 ? \"checked\" : \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"custom-control-label\",\n      htmlFor: \"ck1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, \"Its spam or inappropriate\")), React.createElement(\"div\", {\n      className: \"custom-control custom-radio\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"radio\",\n      className: \"custom-control-input\",\n      id: \"ck2\",\n      name: \"report\",\n      onClick: () => this.onClick(2),\n      checked: this.state.reportOption === 2 ? \"checked\" : \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"custom-control-label\",\n      htmlFor: \"ck2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, \"Posting inappropriate content\")), React.createElement(\"div\", {\n      className: \"custom-control custom-radio\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"radio\",\n      className: \"custom-control-input\",\n      id: \"ck3\",\n      name: \"report\",\n      onClick: () => this.onClick(3),\n      checked: this.state.reportOption === 3 ? \"checked\" : \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"custom-control-label\",\n      htmlFor: \"ck3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, \"Posting spam\")), React.createElement(\"div\", {\n      className: \"custom-control custom-radio\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"radio\",\n      className: \"custom-control-input\",\n      id: \"ck4\",\n      name: \"report\",\n      onClick: () => this.onClick(4),\n      checked: this.state.reportOption === 4 ? \"checked\" : \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"custom-control-label\",\n      htmlFor: \"ck4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, \"Posting annoying content\")), React.createElement(\"div\", {\n      className: \"custom-control custom-radio\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"radio\",\n      className: \"custom-control-input\",\n      id: \"ck5\",\n      name: \"report\",\n      onClick: () => this.onClick(5),\n      checked: this.state.reportOption === 5 ? \"checked\" : \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"custom-control-label\",\n      htmlFor: \"ck5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, \"This profile pretending to be someone else\")), React.createElement(\"div\", {\n      className: \"custom-control custom-radio\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"radio\",\n      className: \"custom-control-input\",\n      id: \"ck6\",\n      name: \"report\",\n      onClick: () => this.onClick(6),\n      checked: this.state.reportOption === 6 ? \"checked\" : \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"custom-control-label\",\n      htmlFor: \"ck6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, \"Might be posting my intellectual property without authorization\")), React.createElement(\"div\", {\n      className: \"custom-control custom-radio\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"radio\",\n      className: \"custom-control-input\",\n      id: \"ck11\",\n      name: \"report\",\n      onClick: () => this.onClick(7),\n      checked: this.state.reportOption === 7 ? \"checked\" : \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"custom-control-label\",\n      htmlFor: \"ck11\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, \"Others\")), this.state.reportOption === 7 ? React.createElement(\"div\", {\n      className: \"md-form form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"md-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      style: {\n        paddingTop: 12\n      },\n      className: \"md-textarea form-control\",\n      onBlur: e => !e.target.value.length && this.refs.report.classList.remove('active'),\n      onFocus: () => this.refs.report.classList.add('active'),\n      id: \"report\",\n      onChange: e => this.setState({\n        reportOther: e.target.value\n      }),\n      value: this.state.caption,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, this.state.reportOther), React.createElement(\"label\", {\n      htmlFor: \"report\",\n      ref: \"report\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, \"Spesify Your Report here\"))) : \"\")), React.createElement(MDBModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, React.createElement(MDBBtn, {\n      color: \"secondary\",\n      onClick: () => this.toggleReport(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, \"Close\"), React.createElement(MDBBtn, {\n      color: \"primary\",\n      onClick: this.sendReport,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, \"Send Report\"))), React.createElement(MDBContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, React.createElement(MDBRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, React.createElement(MDBCol, {\n      size: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      width: \"100%\",\n      src: profile_url + this.state.user.profilepicture,\n      className: \"round-img\",\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    })), React.createElement(MDBCol, {\n      size: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, React.createElement(MDBModal, {\n      isOpen: this.state.showFollower,\n      toggle: () => this.setState({\n        showFollower: !this.state.showFollower\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, React.createElement(MDBModalHeader, {\n      toggle: () => this.setState({\n        showFollower: !this.state.showFollower\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, \"Followers List\"), React.createElement(MDBModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, this.state.follower.map(o => {\n      return React.createElement(\"div\", {\n        className: \"comments mb-2\",\n        onClick: () => this.props.history.push(\"/profile/\" + o.username),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: profile_url + o.profilepicture,\n        className: \"round mr-3\",\n        alt: \"aligment\",\n        width: \"40\",\n        height: \"100%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"comment-info mr-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"bolder mr-2 pointer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, o.username)));\n    })), React.createElement(MDBModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }, React.createElement(MDBBtn, {\n      color: \"secondary\",\n      onClick: () => this.setState({\n        showFollower: false\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }, \"Close\"))), React.createElement(MDBModal, {\n      isOpen: this.state.showFollowing,\n      toggle: () => this.setState({\n        showFollower: !this.state.showFollowing\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }, React.createElement(MDBModalHeader, {\n      toggle: () => this.setState({\n        showFollowing: !this.state.showFollowing\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }, \"Following List\"), React.createElement(MDBModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }, this.state.user.following.map(o => {\n      return React.createElement(\"div\", {\n        className: \"comments mb-2\",\n        onClick: () => this.props.history.push(\"/profile/\" + o.username),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: profile_url + o.profilepicture,\n        className: \"round mr-3\",\n        alt: \"aligment\",\n        width: \"40\",\n        height: \"100%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"comment-info mr-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"bolder mr-2 pointer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        },\n        __self: this\n      }, o.username)));\n    })), React.createElement(MDBModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    }, React.createElement(MDBBtn, {\n      color: \"secondary\",\n      onClick: () => this.setState({\n        showFollowing: false\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    }, \"Close\")))), React.createElement(MDBCol, {\n      size: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"user_data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"profile_username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    }, this.state.user.username), this.followStatus()), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"bolder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    }, this.state.post.length), \" posts\", React.createElement(\"span\", {\n      onClick: () => {\n        if (this.state.follower.length) {\n          this.setState({\n            showFollower: true\n          });\n        }\n      },\n      style: this.state.follower.length ? {\n        cursor: \"pointer\"\n      } : {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"bolder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    }, followformat(parseInt(this.state.follower.length))), \" followers\"), React.createElement(\"span\", {\n      onClick: () => {\n        if (this.state.user.following.length) {\n          this.setState({\n            showFollowing: true\n          });\n        }\n      },\n      style: this.state.user.following.length ? {\n        cursor: \"pointer\"\n      } : {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"bolder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374\n      },\n      __self: this\n    }, followformat(parseInt(this.state.user.following.length))), \" following\"))), React.createElement(\"div\", {\n      style: {\n        position: \"absolute\",\n        right: -75,\n        top: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378\n      },\n      __self: this\n    }, this.props.match.params.profile !== this.props.username ? React.createElement(MDBDropdown, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380\n      },\n      __self: this\n    }, React.createElement(MDBDropdownToggle, {\n      caret: true,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"more-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382\n      },\n      __self: this\n    }, \"More\")), React.createElement(MDBDropdownMenu, {\n      right: true,\n      basic: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384\n      },\n      __self: this\n    }, React.createElement(MDBDropdownItem, {\n      onClick: this.report,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385\n      },\n      __self: this\n    }, \"Report\"), React.createElement(MDBDropdownItem, {\n      onClick: async () => {\n        await navigator.clipboard.writeText(\"\".concat(window.location.origin, \"/profile/\").concat(this.state.user.username));\n        toast.success('Copied!');\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386\n      },\n      __self: this\n    }, \"Copy Profile Url\"), React.createElement(MDBDropdownItem, {\n      onClick: () => {\n        this.props.history.push(\"/chat/\" + this.state.user.username);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390\n      },\n      __self: this\n    }, \"Send Message\"))) : null), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396\n      },\n      __self: this\n    }, this.state.user.nickname || \"\"), React.createElement(\"div\", {\n      style: {\n        whiteSpace: \"pre-line\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399\n      },\n      __self: this\n    }, this.state.user.bio || null))), React.createElement(MDBRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404\n      },\n      __self: this\n    }, React.createElement(MDBModal, {\n      size: \"lg\",\n      isOpen: this.state.showPost,\n      toggle: () => this.setState({\n        showPost: !this.state.showPost\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405\n      },\n      __self: this\n    }, React.createElement(MDBModalHeader, {\n      toggle: () => this.setState({\n        showPost: !this.state.showPost\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409\n      },\n      __self: this\n    }, \"Show Post\"), React.createElement(MDBModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412\n      },\n      __self: this\n    }, this.state.postDetail !== {} ? React.createElement(Post, Object.assign({\n      _id: this.state.postDetail._id,\n      postusername: this.state.postDetail.user.username,\n      posttime: moment(this.state.postDetail.createdAt).fromNow(),\n      postprofilepicture: this.state.postDetail.user.profilepicture,\n      postcaption: this.state.postDetail.caption,\n      totalcomment: this.state.postDetail.comments.length,\n      likeslist: this.state.postDetail.like,\n      postlikes: this.state.postDetail.like.length,\n      likestatus: this.state.postDetail.like.some(e => e._id === this.props.userid),\n      postimages: this.state.postDetail.image,\n      comments: this.state.postDetail.comments\n    }, this.props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415\n      },\n      __self: this\n    })) : \"\"), React.createElement(MDBModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433\n      },\n      __self: this\n    }, React.createElement(MDBBtn, {\n      color: \"secondary\",\n      onClick: () => this.setState({\n        showPost: false\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434\n      },\n      __self: this\n    }, \"Close\"))), React.createElement(MDBCol, {\n      size: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439\n      },\n      __self: this\n    }, React.createElement(MDBRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440\n      },\n      __self: this\n    }, this.state.post.length ? this.state.post.map(o => {\n      return React.createElement(MDBCol, {\n        size: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 445\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"post-thumbnail\",\n        onClick: () => {\n          axios.post(\"\".concat(api_url, \"showPost\"), {\n            id: o._id\n          }).then(res => {\n            this.setState({\n              postDetail: res.data.post,\n              showPost: true\n            });\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: post_url + o.image[0],\n        width: \"100%\",\n        alt: o.image,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 459\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"post_desc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463\n        },\n        __self: this\n      }, React.createElement(MDBIcon, {\n        className: 'pointer ',\n        far: true,\n        onClick: this.togglelike,\n        icon: \"heart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 464\n        },\n        __self: this\n      }), \" \", o.like.length), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 468\n        },\n        __self: this\n      }, React.createElement(MDBIcon, {\n        className: \"pointer\",\n        fa: true,\n        icon: \"comment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 468\n        },\n        __self: this\n      }), \" \", o.comments.length, \" \"))));\n    }) : React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476\n      },\n      __self: this\n    }, \"This User Has no Post to be Shown\"))))))));\n  }\n\n}\n\nconst mapToStateProps = state => {\n  return {\n    token: state.user.token,\n    username: state.user.username,\n    userid: state.user._id,\n    profilepicture: state.user.profilepicture\n  };\n};\n\nexport default connect(mapToStateProps, {\n  logout\n})(Profile);","map":{"version":3,"sources":["/Users/ericanthonywu/Projects/TA-Purwadhika/frontend/src/views/Profile.jsx"],"names":["React","MDBCol","MDBContainer","MDBRow","MDBBtn","MDBIcon","MDBModalHeader","MDBModalBody","MDBModalFooter","MDBModal","MDBDropdownToggle","MDBDropdownMenu","MDBDropdownItem","MDBDropdown","axios","logout","connect","Post","Error404","api_url","followformat","post_url","profile_url","moment","toast","Profile","Component","constructor","props","report","e","setState","reportModal","toggleReport","state","onClick","nr","reportOption","sendReport","reportOther","radioMeans","post","token","localStorage","getItem","userId","user","_id","then","r","success","catch","err","error","follow","userid","userTarget","res","follower","username","profilepicture","unFollow","filter","o","followStatus","match","params","profile","history","push","some","following","isLoading","notFound","showFollower","showFollowing","postDetail","comments","like","componentDidMount","data","console","log","render","paddingTop","toggle","target","value","length","refs","classList","remove","add","caption","map","cursor","parseInt","position","right","top","navigator","clipboard","writeText","window","location","origin","nickname","whiteSpace","bio","showPost","createdAt","fromNow","image","id","togglelike","mapToStateProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n    MDBCol,\n    MDBContainer,\n    MDBRow,\n    MDBBtn,\n    MDBIcon,\n    MDBModalHeader,\n    MDBModalBody,\n    MDBModalFooter,\n    MDBModal,\n    MDBDropdownToggle,\n    MDBDropdownMenu,\n    MDBDropdownItem, MDBDropdown\n} from \"mdbreact\";\nimport axios from 'axios'\nimport {logout} from \"../redux/actions\";\nimport {connect} from 'react-redux'\nimport Post from './template/Post'\nimport Error404 from \"./template/404\";\nimport {api_url, followformat, post_url, profile_url} from \"../global\";\nimport moment from \"moment\";\nimport {toast} from \"react-toastify\";\n\nclass Profile extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: {},\n            post: [],\n            isLoading: true,\n            notFound: false,\n            follower: [],\n            showFollower: false,\n            showFollowing: false,\n            postDetail: {\n                user: {username: \"\"},\n                comments: [],\n                like: []\n            },\n            reportModal: false,\n            reportOption: 0,\n            reportOther: \"\"\n        }\n    }\n    report = e => this.setState({reportModal: true});\n\n    toggleReport = () => this.setState({reportModal: !this.state.reportModal});\n\n    onClick = nr => {\n        this.setState({\n            reportOption: nr\n        });\n    };\n\n    sendReport = e => {\n        if (this.state.reportOption || (this.state.reportOption === 7 && !this.state.reportOther)) {\n            let radioMeans = '';\n            switch (this.state.reportOption) {\n                case 1:\n                    radioMeans = \"Its spam or inappropriate\";\n                    break;\n                case 2:\n                    radioMeans = \"Posting inappropriate content\";\n                    break;\n                case 3:\n                    radioMeans = \"Posting spam\";\n                    break;\n                case 4:\n                    radioMeans = \"Posting annoying content\";\n                    break;\n                case 5:\n                    radioMeans = \"This profile pretending to be someone else\";\n                    break;\n                case 6:\n                    radioMeans = \"Might be posting my intellectual property without authorization\";\n                    break;\n                case 7:\n                    radioMeans = this.state.reportOther;\n                    break\n            }\n            axios.post(`${api_url}reportUser`, {\n                token: this.props.token || localStorage.getItem('token'),\n                report: radioMeans,\n                userId: this.state.user._id\n            }).then(r => toast.success(\"User reported! \")).catch(err => toast.error(\"You already report this user\"))\n            this.setState({\n                reportModal: false\n            })\n        }\n    };\n\n    follow = () => {\n        axios.post(`${api_url}follow`, {\n            token: this.props.token,\n            userid: this.props.userid,\n            userTarget: this.state.user._id\n        }).then(res => {\n            // console.log(this.state.follower)\n            this.setState({\n                follower: [...this.state.follower, {\n                    username: this.props.username,\n                    profilepicture: this.props.profilepicture,\n                    _id: this.props.userid\n                }]\n            })\n            // console.log(this.state.follower)\n        })\n    };\n    unFollow = () => {\n        axios.post(`${api_url}unfollow`, {\n            token: this.props.token,\n            userid: this.props.userid,\n            userTarget: this.state.user._id\n        }).then(res => {\n            this.setState({\n                follower: this.state.follower.filter(o => {\n                    return o._id !== this.props.userid\n                })\n            })\n        })\n    };\n    followStatus = () => (\n        this.props.match.params.profile === this.props.username\n            ?\n            <MDBBtn className={\"waves-effect\"} outline\n                    color={\"elegant\"} onClick={() => this.props.history.push('/updateProfile')}> Edit\n                Profile </MDBBtn>\n            :\n            this.state.follower.some(e => e._id === this.props.userid) ?\n                <MDBBtn className={\"waves-effect\"} outline\n                        color={\"primary\"} onClick={this.unFollow}> Following </MDBBtn> :\n                (\n                    this.state.user.following.some(e => e._id === this.props.userid)\n                        ?\n                        <MDBBtn className={\"waves-effect\"}\n                                color={\"primary\"} onClick={this.follow}>Follow Back</MDBBtn>\n                        :\n                        <MDBBtn className={\"waves-effect\"}\n                                color={\"primary\"} onClick={this.follow}> Follow </MDBBtn>\n                )\n    );\n\n    componentDidMount() {\n        const {profile} = this.props.match.params;\n        if (this.props.token) {\n            axios.post(`${api_url}getprofile`, {\n                token: this.props.token,\n                username: profile\n            }).then(res => {\n                this.setState({\n                    user: res.data.user,\n                    follower: res.data.user.follower,\n                    post: res.data.post,\n                    isLoading: false,\n                });\n            }).catch(err => {\n                console.log(err);\n                this.setState({\n                    isLoading: false,\n                    notFound: true\n                })\n            })\n        } else {\n            this.setState({\n                isLoading: false,\n                notFound: true\n            })\n        }\n    }\n\n    render() {\n        return (\n            <>\n                {\n                    this.state.isLoading ?\n                        <div className={\"container-loading\"}>\n                            <div className=\"spinner-grow text-warning\" role=\"status\">\n                                <span className=\"sr-only\">Loading...</span>\n                            </div>\n                            <div className=\"spinner-grow text-primary\" role=\"status\">\n                                <span className=\"sr-only\">Loading...</span>\n                            </div>\n                            <div className=\"spinner-grow text-default\" role=\"status\">\n                                <span className=\"sr-only\">Loading...</span>\n                            </div>\n                        </div>\n                        :\n                        (\n                            this.state.notFound ?\n                                <Error404/>\n                                :\n                                <div style={{paddingTop: 100}}>\n                                    <MDBModal isOpen={this.state.reportModal} toggle={() => this.toggleReport()}>\n                                        <MDBModalHeader toggle={this.toggle}>Report Post</MDBModalHeader>\n                                        <MDBModalBody className={\"text-left\"}>\n                                            <MDBContainer>\n                                                What are your reason for reporting this post?\n                                                <div className=\"custom-control custom-radio\">\n                                                    <input type=\"radio\" className=\"custom-control-input\" id=\"ck1\"\n                                                           name=\"report\" onClick={() => this.onClick(1)}\n                                                           checked={this.state.reportOption === 1 ? \"checked\" : \"\"}/>\n                                                    <label className=\"custom-control-label\" htmlFor=\"ck1\">\n                                                        Its spam or inappropriate\n                                                    </label>\n                                                </div>\n                                                <div className=\"custom-control custom-radio\">\n                                                    <input type=\"radio\" className=\"custom-control-input\" id=\"ck2\"\n                                                           name=\"report\" onClick={() => this.onClick(2)}\n                                                           checked={this.state.reportOption === 2 ? \"checked\" : \"\"}/>\n                                                    <label className=\"custom-control-label\" htmlFor=\"ck2\">\n                                                        Posting inappropriate content\n                                                    </label>\n                                                </div>\n                                                <div className=\"custom-control custom-radio\">\n                                                    <input type=\"radio\" className=\"custom-control-input\" id=\"ck3\"\n                                                           name=\"report\" onClick={() => this.onClick(3)}\n                                                           checked={this.state.reportOption === 3 ? \"checked\" : \"\"}/>\n                                                    <label className=\"custom-control-label\" htmlFor=\"ck3\">\n                                                        Posting spam\n                                                    </label>\n                                                </div>\n                                                <div className=\"custom-control custom-radio\">\n                                                    <input type=\"radio\" className=\"custom-control-input\" id=\"ck4\"\n                                                           name=\"report\" onClick={() => this.onClick(4)}\n                                                           checked={this.state.reportOption === 4 ? \"checked\" : \"\"}/>\n                                                    <label className=\"custom-control-label\" htmlFor=\"ck4\">\n                                                        Posting annoying content\n                                                    </label>\n                                                </div>\n                                                <div className=\"custom-control custom-radio\">\n                                                    <input type=\"radio\" className=\"custom-control-input\" id=\"ck5\"\n                                                           name=\"report\" onClick={() => this.onClick(5)}\n                                                           checked={this.state.reportOption === 5 ? \"checked\" : \"\"}/>\n                                                    <label className=\"custom-control-label\" htmlFor=\"ck5\">\n                                                        This profile pretending to be someone else\n                                                    </label>\n                                                </div>\n                                                <div className=\"custom-control custom-radio\">\n                                                    <input type=\"radio\" className=\"custom-control-input\" id=\"ck6\"\n                                                           name=\"report\" onClick={() => this.onClick(6)}\n                                                           checked={this.state.reportOption === 6 ? \"checked\" : \"\"}/>\n                                                    <label className=\"custom-control-label\" htmlFor=\"ck6\">\n                                                        Might be posting my intellectual property without authorization\n                                                    </label>\n                                                </div>\n                                                <div className=\"custom-control custom-radio\">\n                                                    <input type=\"radio\" className=\"custom-control-input\" id=\"ck11\"\n                                                           name=\"report\" onClick={() => this.onClick(7)}\n                                                           checked={this.state.reportOption === 7 ? \"checked\" : \"\"}/>\n                                                    <label className=\"custom-control-label\" htmlFor=\"ck11\">\n                                                        Others\n                                                    </label>\n                                                </div>\n                                                {\n                                                    this.state.reportOption === 7 ?\n                                                        <div className=\"md-form form-group\">\n                                                            <div className=\"md-form\">\n                                        <textarea style={{paddingTop: 12}}\n                                                  className={\"md-textarea form-control\"}\n                                                  onBlur={e => !e.target.value.length && this.refs.report.classList.remove('active')}\n                                                  onFocus={() => this.refs.report.classList.add('active')}\n                                                  id={\"report\"}\n                                                  onChange={e => this.setState({reportOther: e.target.value})}\n                                                  value={this.state.caption}\n                                        >\n                                                {this.state.reportOther}\n                                            </textarea>\n                                                                <label htmlFor=\"report\" ref={\"report\"}>Spesify Your Report here</label>\n                                                            </div>\n                                                        </div>\n                                                        :\n                                                        \"\"\n                                                }\n                                            </MDBContainer>\n                                        </MDBModalBody>\n                                        <MDBModalFooter>\n                                            <MDBBtn color=\"secondary\" onClick={() => this.toggleReport()}>Close</MDBBtn>\n                                            <MDBBtn color=\"primary\" onClick={this.sendReport}>Send Report</MDBBtn>\n                                        </MDBModalFooter>\n                                    </MDBModal>\n                                    <MDBContainer>\n                                        <MDBRow>\n                                            <MDBCol size={3}>\n                                                <img width={\"100%\"} src={profile_url + this.state.user.profilepicture}\n                                                     className={\"round-img\"} alt=\"\"/>\n                                            </MDBCol>\n                                            <MDBCol size={1}>\n                                                <MDBModal isOpen={this.state.showFollower} toggle={() => this.setState({\n                                                    showFollower: !this.state.showFollower\n                                                })}>\n                                                    <MDBModalHeader toggle={() => this.setState({\n                                                        showFollower: !this.state.showFollower\n                                                    })}>Followers List</MDBModalHeader>\n                                                    <MDBModalBody>\n                                                        {\n                                                            this.state.follower.map(o => {\n                                                                return (\n                                                                    <div className=\"comments mb-2\"\n                                                                         onClick={() => this.props.history.push(\"/profile/\" + o.username)}>\n                                                                        <img\n                                                                            src={profile_url + o.profilepicture}\n                                                                            className=\"round mr-3\" alt=\"aligment\"\n                                                                            width=\"40\" height=\"100%\"/>\n                                                                        <div className=\"comment-info mr-5\"><span\n                                                                            className=\"bolder mr-2 pointer\">{o.username}</span>\n                                                                        </div>\n                                                                    </div>\n                                                                )\n                                                            })\n                                                        }\n                                                    </MDBModalBody>\n                                                    <MDBModalFooter>\n                                                        <MDBBtn color=\"secondary\" onClick={() => this.setState({\n                                                            showFollower: false\n                                                        })}>Close</MDBBtn>\n                                                    </MDBModalFooter>\n                                                </MDBModal>\n\n                                                <MDBModal isOpen={this.state.showFollowing}\n                                                          toggle={() => this.setState({\n                                                              showFollower: !this.state.showFollowing\n                                                          })}>\n                                                    <MDBModalHeader toggle={() => this.setState({\n                                                        showFollowing: !this.state.showFollowing\n                                                    })}>Following List</MDBModalHeader>\n                                                    <MDBModalBody>\n                                                        {\n                                                            this.state.user.following.map(o => {\n                                                                return (\n                                                                    <div className=\"comments mb-2\"\n                                                                         onClick={() => this.props.history.push(\"/profile/\" + o.username)}>\n                                                                        <img\n                                                                            src={profile_url + o.profilepicture}\n                                                                            className=\"round mr-3\" alt=\"aligment\"\n                                                                            width=\"40\" height=\"100%\"/>\n                                                                        <div className=\"comment-info mr-5\">\n                                                                            <span\n                                                                                className=\"bolder mr-2 pointer\">{o.username}</span>\n                                                                        </div>\n                                                                    </div>\n                                                                )\n                                                            })\n                                                        }\n                                                    </MDBModalBody>\n                                                    <MDBModalFooter>\n                                                        <MDBBtn color=\"secondary\" onClick={() => this.setState({\n                                                            showFollowing: false\n                                                        })}>Close</MDBBtn>\n                                                    </MDBModalFooter>\n                                                </MDBModal>\n                                            </MDBCol>\n                                            <MDBCol size={6}>\n                                                <div className=\"user_data\">\n                                                    <div>\n                                                        <span\n                                                            className={\"profile_username\"}>{this.state.user.username}</span>\n                                                        {this.followStatus()}\n                                                    </div>\n                                                    <div>\n                                                        <span className={\"bolder\"}>{this.state.post.length}</span> posts\n                                                        <span onClick={() => {\n                                                            if (this.state.follower.length) {\n                                                                this.setState({showFollower: true})\n                                                            }\n                                                        }}\n                                                              style={this.state.follower.length ? {cursor: \"pointer\"} : {}}><span\n                                                            className={\"bolder\"}>{followformat(parseInt(this.state.follower.length))}</span> followers</span>\n                                                        <span onClick={() => {\n                                                            if (this.state.user.following.length) {\n                                                                this.setState({showFollowing: true})\n                                                            }\n                                                        }}\n                                                              style={this.state.user.following.length ? {cursor: \"pointer\"} : {}}><span\n                                                            className={\"bolder\"}>{followformat(parseInt(this.state.user.following.length))}</span> following</span>\n                                                    </div>\n                                                </div>\n                                                <div style={{position:\"absolute\",right:-75,top:0}}>\n                                                {this.props.match.params.profile !== this.props.username ?\n                                                    <MDBDropdown>\n                                                        <MDBDropdownToggle caret color=\"primary\">\n                                                            <span className={\"more-info\"}>More</span>\n                                                        </MDBDropdownToggle>\n                                                        <MDBDropdownMenu right basic>\n                                                            <MDBDropdownItem onClick={this.report}>Report</MDBDropdownItem>\n                                                            <MDBDropdownItem onClick={async () => {\n                                                                await navigator.clipboard.writeText(`${window.location.origin}/profile/${this.state.user.username}`);\n                                                                toast.success('Copied!')\n                                                            }}>Copy Profile Url</MDBDropdownItem>\n                                                            <MDBDropdownItem onClick={() => {\n                                                                this.props.history.push(\"/chat/\"+this.state.user.username)\n                                                            }}>Send Message</MDBDropdownItem>\n                                                        </MDBDropdownMenu>\n                                                    </MDBDropdown> : null}\n                                                </div>\n                                                <div>\n                                                    {this.state.user.nickname || \"\"}\n                                                </div>\n                                                <div style={{whiteSpace: \"pre-line\"}}>\n                                                    {this.state.user.bio || null}\n                                                </div>\n                                            </MDBCol>\n                                        </MDBRow>\n                                        <MDBRow>\n                                            <MDBModal size={\"lg\"} isOpen={this.state.showPost}\n                                                      toggle={() => this.setState({\n                                                          showPost: !this.state.showPost\n                                                      })}>\n                                                <MDBModalHeader toggle={() => this.setState({\n                                                    showPost: !this.state.showPost\n                                                })}>Show Post</MDBModalHeader>\n                                                <MDBModalBody>\n                                                    {\n                                                        this.state.postDetail !== {} ?\n                                                            <Post\n                                                                _id={this.state.postDetail._id}\n                                                                postusername={this.state.postDetail.user.username}\n                                                                posttime={moment(this.state.postDetail.createdAt).fromNow()}\n                                                                postprofilepicture={this.state.postDetail.user.profilepicture}\n                                                                postcaption={this.state.postDetail.caption}\n                                                                totalcomment={this.state.postDetail.comments.length}\n                                                                likeslist={this.state.postDetail.like}\n                                                                postlikes={this.state.postDetail.like.length}\n                                                                likestatus={this.state.postDetail.like.some(e => e._id === this.props.userid)}\n                                                                postimages={this.state.postDetail.image}\n                                                                comments={this.state.postDetail.comments}\n                                                                {...this.props}\n                                                            />\n                                                            :\n                                                            \"\"\n                                                    }\n                                                </MDBModalBody>\n                                                <MDBModalFooter>\n                                                    <MDBBtn color=\"secondary\" onClick={() => this.setState({\n                                                        showPost: false\n                                                    })}>Close</MDBBtn>\n                                                </MDBModalFooter>\n                                            </MDBModal>\n                                            <MDBCol size={12}>\n                                                <MDBRow>\n                                                    {\n                                                        this.state.post.length ?\n                                                            this.state.post.map(o => {\n                                                                return (\n                                                                    <MDBCol size={4}>\n                                                                        <div className={\"post-thumbnail\"}\n                                                                             onClick={() => {\n                                                                                 axios.post(`${api_url}showPost`, {\n                                                                                     id: o._id\n                                                                                 }).then(res => {\n                                                                                     this.setState({\n                                                                                         postDetail: res.data.post,\n                                                                                         showPost: true,\n                                                                                     })\n                                                                                 });\n\n                                                                             }\n                                                                             }>\n                                                                            <img\n                                                                                src={post_url + o.image[0]}\n                                                                                width={\"100%\"} alt={o.image}/>\n                                                                            <div className={\"post_desc\"}>\n                                                                            <span>\n                                                                                <MDBIcon className={'pointer '} far\n                                                                                         onClick={this.togglelike}\n                                                                                         icon=\"heart\"/> {o.like.length}\n                                                                            </span>\n                                                                                <span><MDBIcon className={\"pointer\"} fa\n                                                                                               icon=\"comment\"/> {o.comments.length} </span>\n                                                                            </div>\n                                                                        </div>\n                                                                    </MDBCol>\n                                                                )\n                                                            })\n                                                            :\n                                                            <center><h1>This User Has no Post to be Shown</h1></center>\n                                                    }\n                                                </MDBRow>\n                                            </MDBCol>\n                                        </MDBRow>\n                                    </MDBContainer>\n                                </div>\n                        )\n\n                }\n            </>\n        );\n    }\n}\n\nconst mapToStateProps = state => {\n    return {\n        token: state.user.token,\n        username: state.user.username,\n        userid: state.user._id,\n        profilepicture: state.user.profilepicture\n    }\n};\nexport default connect(mapToStateProps, {logout})(Profile)\n"]},"metadata":{},"sourceType":"module"}