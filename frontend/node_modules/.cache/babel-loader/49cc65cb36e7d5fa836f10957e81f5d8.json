{"ast":null,"code":"var _jsxFileName = \"/Users/ericanthonywu/Projects/TA-Purwadhika/frontend/src/views/Chat.jsx\";\nimport React from 'react';\nimport socketio from 'socket.io-client';\nimport { api_url, backend_url, base_url } from \"../global\";\nimport axios from 'axios';\nimport { connect } from \"react-redux\";\nimport { MDBInput, MDBBtn, MDBCol, MDBIcon } from \"mdbreact\";\nimport { toast } from \"react-toastify\";\nimport { Picker } from \"emoji-mart\";\nimport moment from \"moment\";\nimport Error404 from \"./template/404\";\nimport { logout } from \"../redux/actions\";\n\nclass Chat extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.sendChat = e => {\n      if (e.keyCode === 13 && !e.shiftKey) {\n        const msg = e.target.value.replace(/\\n$/, \"\");\n        e.target.value = \"\";\n        e.target.scrollTop = e.target.scrollHeight - e.target.clientHeight;\n        axios.post(\"\".concat(api_url, \"sendChat\"), {\n          msg: msg,\n          token: this.props.token,\n          username: this.state.username\n        }).then(r => {\n          if (this.state.chat.length) {\n            this.setState({\n              chat: [...this.state.chat, {\n                sender: {\n                  username: this.props.username\n                },\n                message: msg\n              }]\n            });\n          } else {\n            this.setState({\n              chat: [{\n                sender: {\n                  username: this.props.username\n                },\n                message: msg\n              }]\n            });\n          }\n        });\n      }\n    };\n\n    this.addEmoji = e => {\n      let emoji = e.native;\n      this.refs.comment.value += emoji;\n    };\n\n    this.togglesticker = () => {\n      if (!this.state.showsticker) {\n        // attach/remove event handler\n        document.addEventListener('click', this.handleOutsideClick, false);\n        document.onkeydown = this.handleOutsideClick;\n      } else {\n        document.removeEventListener('click', this.handleOutsideClick, false);\n        document.onkeydown = this.handleOutsideClick;\n      }\n\n      this.setState({\n        showsticker: !this.state.showsticker\n      });\n    };\n\n    this.handleOutsideClick = e => {\n      // ignore clicks on the component itself\n      if (document.querySelector('section.emoji-mart') !== null) {\n        this.setState({\n          showsticker: !document.querySelector('section.emoji-mart').contains(e.target) || e.key === \"Escape\"\n        });\n        this.togglesticker();\n      }\n    };\n\n    this.state = {\n      chat: [],\n      msg: \"\",\n      username: \"\",\n      notFound: false,\n      read: false\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevProps.match.params !== this.props.match.params) {\n      const username = this.props.match.params.username;\n\n      if (username == this.props.username) {\n        this.setState({\n          notFound: true\n        });\n      } else {\n        axios.post(\"\".concat(api_url, \"updateChat\"), {\n          to: this.props.id,\n          username: username,\n          token: this.props.token\n        });\n        axios.post(\"\".concat(api_url, \"showChat\"), {\n          token: localStorage.getItem('token'),\n          username: username\n        }).then(res => {\n          console.log(res);\n          this.setState({\n            chat: res.data.data.message,\n            notFound: false\n          });\n        }).catch(err => {\n          if (err.response) {\n            switch (err.response.status) {\n              case 419:\n                toast.error(\"Session Expired\");\n                this.props.logout();\n                break;\n\n              case 404:\n                this.setState({\n                  notFound: true\n                });\n                break;\n            }\n          }\n        });\n      }\n    }\n  }\n\n  componentDidMount() {\n    const username = this.props.match.params.username;\n\n    if (username == this.props.username) {\n      this.setState({\n        notFound: true\n      });\n    } else {\n      const socket = socketio(backend_url, {\n        query: {\n          token: localStorage.getItem('token')\n        }\n      });\n      this.setState({\n        username: username\n      });\n      axios.post(\"\".concat(api_url, \"updateChat\"), {\n        token: localStorage.getItem('token'),\n        username: username\n      });\n      socket.on('newChat', chat => {\n        if (chat.to._id == this.props.id && chat.from.username == username) {\n          if (base_url + \"chat/\" + chat.from.username == window.location.href) {\n            axios.post(\"\".concat(api_url, \"updateChat\"), {\n              token: this.props.token || localStorage.getItem('token'),\n              username: username\n            }).then(res => {});\n          }\n\n          this.setState({\n            chat: [...this.state.chat, chat.chat]\n          });\n        }\n      });\n      socket.on('readChat', chat => {\n        if (chat.to._id == this.props.id && chat.from.username == username) {\n          const temparr = this.state.chat;\n          temparr.map(o => {\n            if (o) {\n              if (o.sender.username == this.props.username) {\n                o.read = true;\n              }\n            }\n          });\n          console.log(temparr, this.state.chat);\n          this.setState({\n            chat: temparr\n          });\n        }\n      });\n      axios.post(\"\".concat(api_url, \"showChat\"), {\n        token: localStorage.getItem('token'),\n        username: username\n      }).then(res => {\n        this.setState({\n          chat: this.state.chat.length ? [...this.state.chat, res.data.data.message] : res.data.data.message\n        });\n      }).catch(err => {\n        if (err.response) {\n          switch (err.response.status) {\n            case 419:\n              toast.error(\"Session Expired\");\n              this.props.logout();\n              break;\n\n            case 404:\n              this.setState({\n                notFound: true\n              });\n              break;\n          }\n        }\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, this.state.notFound ? React.createElement(Error404, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }) : React.createElement(MDBCol, {\n      size: 4,\n      style: {\n        paddingTop: 100,\n        margin: \"auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, this.props.match.params.username), React.createElement(\"div\", {\n      className: \"show-chat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, this.state.chat ? this.state.chat.map(o => {\n      return o ? React.createElement(\"div\", {\n        className: o.sender.username != this.props.username ? \"receiver\" : \"sender\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, o.message, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, moment(o.time).fromNow(), \" \", o.sender.username == this.props.username ? o.read ? \"Read\" : \"Delivered\" : null))) : null;\n    }) : null), React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        marginTop: this.state.chat\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"md-form usercomment w-100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, this.state.showsticker && React.createElement(\"div\", {\n      className: \"emoji-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, React.createElement(Picker, {\n      set: \"emojione\",\n      title: \"Choose Sticker\",\n      onSelect: this.addEmoji,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    })), React.createElement(\"textarea\", {\n      style: {\n        paddingTop: 0\n      },\n      className: \"md-textarea comment-textarea form-control\",\n      id: \"usercomment\",\n      onKeyUp: this.sendChat,\n      ref: \"comment\",\n      placeholder: \"Enter Your Chat Here\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }), React.createElement(MDBBtn, {\n      className: \"sticker\",\n      onClick: this.togglesticker,\n      size: \"lg\",\n      gradient: \"purple\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, React.createElement(MDBIcon, {\n      far: true,\n      icon: \"laugh-beam\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.user.token,\n    id: state.user._id,\n    username: state.user.username\n  };\n};\n\nexport default connect(mapStateToProps, {\n  logout\n})(Chat);","map":{"version":3,"sources":["/Users/ericanthonywu/Projects/TA-Purwadhika/frontend/src/views/Chat.jsx"],"names":["React","socketio","api_url","backend_url","base_url","axios","connect","MDBInput","MDBBtn","MDBCol","MDBIcon","toast","Picker","moment","Error404","logout","Chat","Component","constructor","props","sendChat","e","keyCode","shiftKey","msg","target","value","replace","scrollTop","scrollHeight","clientHeight","post","token","username","state","then","r","chat","length","setState","sender","message","addEmoji","emoji","native","refs","comment","togglesticker","showsticker","document","addEventListener","handleOutsideClick","onkeydown","removeEventListener","querySelector","contains","key","notFound","read","componentDidUpdate","prevProps","prevState","snapshot","match","params","to","id","localStorage","getItem","res","console","log","data","catch","err","response","status","error","componentDidMount","socket","query","on","_id","from","window","location","href","temparr","map","o","render","paddingTop","margin","time","fromNow","display","marginTop","mapStateToProps","user"],"mappings":"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","sourcesContent":["import React from 'react'\nimport socketio from 'socket.io-client'\nimport {api_url, backend_url, base_url} from \"../global\";\nimport axios from 'axios'\nimport {connect} from \"react-redux\";\nimport {MDBInput, MDBBtn, MDBCol, MDBIcon} from \"mdbreact\";\nimport {toast} from \"react-toastify\";\nimport {Picker} from \"emoji-mart\";\nimport moment from \"moment\";\nimport Error404 from \"./template/404\";\nimport {logout} from \"../redux/actions\";\n\nclass Chat extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            chat: [],\n            msg: \"\",\n            username: \"\",\n            notFound: false,\n            read: false\n        }\n    }\n\n    sendChat = e => {\n        if (e.keyCode === 13 && !e.shiftKey) {\n            const msg = e.target.value.replace(/\\n$/, \"\");\n            e.target.value = \"\";\n            e.target.scrollTop = e.target.scrollHeight - e.target.clientHeight;\n            axios.post(`${api_url}sendChat`, {\n                msg: msg,\n                token: this.props.token,\n                username: this.state.username\n            }).then(r => {\n                if (this.state.chat.length) {\n                    this.setState({\n                        chat: [...this.state.chat, {\n                            sender: {\n                                username: this.props.username,\n                            },\n                            message: msg\n                        }]\n                    })\n                } else {\n                    this.setState({\n                        chat: [{\n                            sender: {\n                                username: this.props.username,\n                            },\n                            message: msg\n                        }]\n                    })\n                }\n            })\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.match.params !== this.props.match.params) {\n            const {username} = this.props.match.params;\n            if (username == this.props.username) {\n                this.setState({\n                    notFound: true\n                })\n            } else {\n                axios.post(`${api_url}updateChat`, {\n                    to: this.props.id,\n                    username: username,\n                    token: this.props.token\n                });\n                axios.post(`${api_url}showChat`, {\n                    token: localStorage.getItem('token'),\n                    username: username\n                }).then(res => {\n                    console.log(res);\n                    this.setState({\n                        chat: res.data.data.message,\n                        notFound: false\n                    });\n                }).catch(err => {\n                    if (err.response) {\n                        switch (err.response.status) {\n                            case 419:\n                                toast.error(\"Session Expired\");\n                                this.props.logout();\n                                break;\n                            case 404:\n                                this.setState({\n                                    notFound: true\n                                });\n                                break;\n                        }\n                    }\n                });\n            }\n        }\n    }\n\n    componentDidMount() {\n        const {username} = this.props.match.params;\n        if (username == this.props.username) {\n            this.setState({\n                notFound: true\n            })\n        } else {\n            const socket = socketio(backend_url, {\n                query: {\n                    token: localStorage.getItem('token'),\n                }\n            });\n            this.setState({\n                username: username\n            });\n            axios.post(`${api_url}updateChat`, {\n                token: localStorage.getItem('token'),\n                username: username\n            });\n            socket.on('newChat', chat => {\n                if (chat.to._id == this.props.id && chat.from.username == username) {\n                    if (base_url + \"chat/\" + chat.from.username == window.location.href) {\n                        axios.post(`${api_url}updateChat`, {\n                            token: this.props.token || localStorage.getItem('token'),\n                            username: username\n                        }).then(res => {\n\n                        })\n                    }\n                    this.setState({\n                        chat: [...this.state.chat, chat.chat]\n                    })\n                }\n            });\n            socket.on('readChat', chat => {\n                if (chat.to._id == this.props.id && chat.from.username == username) {\n                    const temparr = this.state.chat\n                    temparr.map(o => {\n                        if(o) {\n                            if (o.sender.username == this.props.username) {\n                                o.read = true\n                            }\n                        }\n                    });\n                    console.log(temparr,this.state.chat)\n                    this.setState({\n                        chat:temparr\n                    })\n                }\n            });\n            axios.post(`${api_url}showChat`, {\n                token: localStorage.getItem('token'),\n                username: username\n            }).then(res => {\n                this.setState({\n                    chat: this.state.chat.length ? [...this.state.chat, res.data.data.message] : res.data.data.message\n                });\n            }).catch(err => {\n                if (err.response) {\n                    switch (err.response.status) {\n                        case 419:\n                            toast.error(\"Session Expired\");\n                            this.props.logout();\n                            break;\n                        case 404:\n                            this.setState({\n                                notFound: true\n                            });\n                            break;\n                    }\n                }\n            });\n        }\n    }\n\n    addEmoji = e => {\n        let emoji = e.native;\n        this.refs.comment.value += emoji\n    };\n    togglesticker = () => {\n        if (!this.state.showsticker) {\n            // attach/remove event handler\n            document.addEventListener('click', this.handleOutsideClick, false);\n            document.onkeydown = this.handleOutsideClick\n        } else {\n            document.removeEventListener('click', this.handleOutsideClick, false);\n            document.onkeydown = this.handleOutsideClick\n        }\n        this.setState({\n            showsticker: !this.state.showsticker\n        })\n    };\n    handleOutsideClick = e => {\n        // ignore clicks on the component itself\n        if (document.querySelector('section.emoji-mart') !== null) {\n            this.setState({\n                showsticker: !document.querySelector('section.emoji-mart').contains(e.target) || e.key === \"Escape\"\n            });\n            this.togglesticker()\n        }\n    };\n\n    render() {\n        return (\n            <>\n                {\n                    this.state.notFound ?\n                        <Error404/>\n                        :\n                        <MDBCol size={4} style={{paddingTop: 100, margin: \"auto\"}}>\n                            <h3>{this.props.match.params.username}</h3>\n                            <div className={\"show-chat\"}>\n                                {\n                                    this.state.chat ?\n                                    this.state.chat.map(o => {\n                                        return o ? (\n                                            <div\n                                                className={o.sender.username != this.props.username ? \"receiver\" : \"sender\"}>\n                                                <div>{o.message}<br/>\n                                                    <span>{moment(o.time).fromNow()} {o.sender.username == this.props.username ? (o.read ? \"Read\" : \"Delivered\") : null}</span>\n                                                </div>\n                                            </div>\n                                        ) : null\n                                    })\n                                        :\n                                        null\n                                }\n                            </div>\n                            <div style={{display: \"flex\", marginTop: this.state.chat}}>\n                                <div className=\"md-form usercomment w-100\">\n                                    {this.state.showsticker && <div className={\"emoji-container\"}>\n                                        <Picker set='emojione' title={\"Choose Sticker\"}\n                                                onSelect={this.addEmoji}/>\n                                    </div>}\n                                    <textarea style={{paddingTop: 0}}\n                                              className={\"md-textarea comment-textarea form-control\"}\n                                              id={\"usercomment\"}\n                                              onKeyUp={this.sendChat}\n                                              ref={\"comment\"}\n                                              placeholder={\"Enter Your Chat Here\"}\n                                    />\n                                    <MDBBtn className={\"sticker\"}\n                                            onClick={this.togglesticker} size=\"lg\" gradient=\"purple\"><MDBIcon\n                                        far icon=\"laugh-beam\"/></MDBBtn>\n                                </div>\n                                {/*<MDBInput onChange={e => this.setState({msg:e.target.value})} value={this.state.msg} ref={\"chat\"}/>*/}\n                                {/*<MDBBtn onClick={this.sendChat}>Send</MDBBtn>*/}\n                            </div>\n                        </MDBCol>\n                }\n            </>\n        )\n    }\n}\n\nconst mapStateToProps = (state => {\n    return {\n        token: state.user.token,\n        id: state.user._id,\n        username: state.user.username,\n    }\n});\nexport default connect(mapStateToProps, {logout})(Chat)\n"]},"metadata":{},"sourceType":"module"}