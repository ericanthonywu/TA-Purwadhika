{"ast":null,"code":"var _jsxFileName = \"/Users/ericanthonywu/Projects/TA-Purwadhika/admin/src/views/DashboardPage.jsx\";\nimport React from \"react\";\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport Axios from \"axios\";\nimport { api_url } from \"../global\";\nimport { connect } from \"react-redux\";\nam4core.useTheme(am4themes_animated);\n\nclass DashboardPage extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    Axios.post(\"\".concat(api_url, \"dashboard\"), {\n      token: this.props.token || localStorage.getItem('token')\n    }).then(res => {\n      let chart = am4core.create(\"chartdiv\", am4charts.XYChart);\n      chart.paddingRight = 20; // let data = [];\n      // let visits = 10;\n      // for (let i = 1; i < 366; i++) {\n      //     visits += Math.round((Math.random() < 0.5 ? 1 : -1) * Math.random() * 10);\n      //     data.push({ date: new Date(2018, 0, i), name: \"name\" + i, value: visits });\n      // }\n      // console.log(data)\n\n      chart.data = res.data;\n      let dateAxis = chart.xAxes.push(new am4charts.DateAxis());\n      dateAxis.renderer.grid.template.location = 0;\n      let valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\n      valueAxis.tooltip.disabled = true;\n      valueAxis.renderer.minWidth = 35;\n      let series = chart.series.push(new am4charts.LineSeries());\n      series.dataFields.dateX = \"date\";\n      series.dataFields.valueY = \"value\";\n      series.tooltipText = \"{valueY.value}\";\n      chart.cursor = new am4charts.XYCursor();\n      let scrollbarX = new am4charts.XYChartScrollbar();\n      scrollbarX.series.push(series);\n      chart.scrollbarX = scrollbarX;\n      this.chart = chart;\n    });\n  }\n\n  componentWillUnmount() {\n    if (this.chart) {\n      this.chart.dispose();\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"chartdiv\",\n      style: {\n        width: \"100%\",\n        height: \"500px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapToStateProps = state => {\n  return {\n    token: state.user.token\n  };\n};\n\nexport default connect(mapToStateProps)(DashboardPage);","map":{"version":3,"sources":["/Users/ericanthonywu/Projects/TA-Purwadhika/admin/src/views/DashboardPage.jsx"],"names":["React","am4core","am4charts","am4themes_animated","Axios","api_url","connect","useTheme","DashboardPage","Component","constructor","props","componentDidMount","post","token","localStorage","getItem","then","res","chart","create","XYChart","paddingRight","data","dateAxis","xAxes","push","DateAxis","renderer","grid","template","location","valueAxis","yAxes","ValueAxis","tooltip","disabled","minWidth","series","LineSeries","dataFields","dateX","valueY","tooltipText","cursor","XYCursor","scrollbarX","XYChartScrollbar","componentWillUnmount","dispose","render","width","height","mapToStateProps","state","user"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport Axios from \"axios\";\nimport {api_url} from \"../global\";\nimport {connect} from \"react-redux\";\nam4core.useTheme(am4themes_animated);\n\nclass DashboardPage extends React.Component{\n    constructor(props) {\n        super(props);\n    }\n    componentDidMount() {\n        Axios.post(`${api_url}dashboard`,{\n            token: this.props.token || localStorage.getItem('token')\n        }).then(res => {\n            let chart = am4core.create(\"chartdiv\", am4charts.XYChart);\n\n            chart.paddingRight = 20;\n\n            // let data = [];\n            // let visits = 10;\n            // for (let i = 1; i < 366; i++) {\n            //     visits += Math.round((Math.random() < 0.5 ? 1 : -1) * Math.random() * 10);\n            //     data.push({ date: new Date(2018, 0, i), name: \"name\" + i, value: visits });\n            // }\n            // console.log(data)\n\n            chart.data = res.data;\n\n            let dateAxis = chart.xAxes.push(new am4charts.DateAxis());\n            dateAxis.renderer.grid.template.location = 0;\n\n            let valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\n            valueAxis.tooltip.disabled = true;\n            valueAxis.renderer.minWidth = 35;\n\n            let series = chart.series.push(new am4charts.LineSeries());\n            series.dataFields.dateX = \"date\";\n            series.dataFields.valueY = \"value\";\n\n            series.tooltipText = \"{valueY.value}\";\n            chart.cursor = new am4charts.XYCursor();\n\n            let scrollbarX = new am4charts.XYChartScrollbar();\n            scrollbarX.series.push(series);\n            chart.scrollbarX = scrollbarX;\n\n            this.chart = chart;\n        })\n    }\n    componentWillUnmount() {\n        if (this.chart) {\n            this.chart.dispose();\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <div id=\"chartdiv\" style={{ width: \"100%\", height: \"500px\" }}></div>\n            </div>\n        );\n    }\n}\n\nconst mapToStateProps = state => {\n    return {\n        token: state.user.token\n    }\n}\nexport default connect(mapToStateProps)(DashboardPage)\n"]},"metadata":{},"sourceType":"module"}