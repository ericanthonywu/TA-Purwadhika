{"ast":null,"code":"var _jsxFileName = \"/Users/ericanthonywu/Projects/TA-Purwadhika/admin/src/views/ReportPage.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { MDBBtn, MDBCard, MDBCardBody, MDBCardText, MDBCardTitle, MDBCarousel, MDBCarouselInner, MDBCarouselItem, MDBContainer, MDBDataTable, MDBModal, MDBModalBody, MDBModalFooter, MDBModalHeader, MDBView } from \"mdbreact\";\nimport Axios from \"axios\";\nimport { api_url, err, frontend_url, post_url, profile_url } from \"../global\";\nimport Datatable from 'react-data-table-component';\nimport Swal from 'sweetalert2';\nimport withReactContent from 'sweetalert2-react-content';\nimport { toast } from \"react-toastify\";\nimport DatePicker from 'react-date-picker';\nimport moment from \"moment\";\nconst swal = withReactContent(Swal);\n\nclass ReportPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.refreshTable = () => {\n      Axios.post(\"\".concat(api_url, \"report\"), {\n        token: this.props.token || localStorage.getItem('token')\n      }).then(res => {\n        const data = res.data.data;\n        data.forEach((o, id) => {\n          data[id].no = id + 1;\n        });\n        this.setState({\n          data: data,\n          loading: false\n        });\n      }).catch(err);\n    };\n\n    this.action = rows => rows.userId ? React.createElement(React.Fragment, null, React.createElement(MDBBtn, {\n      size: \"sm\",\n      gradient: \"frozen-dreams\",\n      onClick: () => {\n        swal.fire({\n          title: \"Apakah anda yakin akan \".concat(rows.userId.status !== 1 ? \"block\" : \"unblock\", \" \").concat(rows.userId.username, \"?\"),\n          text: \"Anda bisa \".concat(rows.userId.status !== 1 ? \"unblock\" : \"block\", \" \").concat(rows.userId.username, \" kembali\"),\n          type: 'warning',\n          showCancelButton: true,\n          confirmButtonText: \"Ya, \".concat(rows.userId.status !== 1 ? \"Block\" : \"Unblock\", \" saja!\"),\n          cancelButtonText: 'Batalkan',\n          reverseButtons: true\n        }).then(res => {\n          if (res.value) {\n            Axios.post(\"\".concat(api_url, \"blockUsers\"), {\n              token: this.props.token,\n              id: rows.userId._id,\n              status: rows.userId.status\n            }).then(res => {\n              swal.fire(\"Sukses! User \".concat(rows.userId.username, \" telah di \").concat(rows.userId.status !== 1 ? \"Block\" : \"Unblock\"), '', 'success');\n              this.refreshTable();\n            }).catch(err => {\n              if (err.status == 419) {\n                toast.error(\"Session Expired\");\n                this.props.history.push('/');\n              }\n\n              console.log(err);\n            });\n          }\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \" \", rows.userId.status == 1 ? \"unblock\" : \"block\", \" \"), React.createElement(MDBBtn, {\n      size: \"sm\",\n      gradient: \"sunny-morning\",\n      onClick: () => {\n        this.setState({\n          modal: true,\n          suspendName: rows.username,\n          suspendId: rows._id\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \" \", rows.userId.status == 2 ? \"unsuspend\" : \"suspend\")) : React.createElement(MDBBtn, {\n      onClick: () => {\n        swal.fire({\n          title: \"Apakah anda yakin akan \".concat(!rows.postId.ban ? \"hide\" : \"unhide\", \" post ini?\"),\n          text: \"Anda bisa \".concat(rows.postId.ban ? \"unhide\" : \"hide\", \" post ini kembali\"),\n          type: 'warning',\n          showCancelButton: true,\n          confirmButtonText: \"Ya, \".concat(!rows.postId.ban ? \"Hide\" : \"Unhide\", \" saja!\"),\n          cancelButtonText: 'Batalkan',\n          reverseButtons: true\n        }).then(res => {\n          if (res.value) {\n            Axios.post(\"\".concat(api_url, \"hidePost\"), {\n              token: this.props.token,\n              post: rows.postId._id,\n              ban: !rows.postId.ban\n            }).then(res => {\n              console.log(rows);\n              swal.fire(\"Success! Post telah di hide!\", '', 'success');\n              this.refreshTable();\n            });\n          }\n        });\n      },\n      color: \"red\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, !rows.postId.ban ? \"Hide\" : \"Unhide\", \" Posts\");\n\n    this.changeSuspendTime = date => this.setState({\n      suspendTime: date\n    });\n\n    this.toggle = () => this.setState({\n      modal: !this.state.modal,\n      suspendName: this.state.modal ? this.state.suspendName : \"\",\n      suspendId: this.state.modal ? this.state.suspendId : \"\",\n      time: this.state.modal ? this.state.time : \"\"\n    });\n\n    this.suspendUser = () => {\n      Axios.post(\"\".concat(api_url, \"suspendUser\"), {\n        token: this.props.token,\n        user: this.state.suspendId,\n        time: this.state.suspendTime\n      }).then(res => {\n        swal.fire(\"Sukses! User \".concat(this.state.suspendName, \" telah di suspend!\"), '', 'success');\n        this.setState({\n          suspendName: \"\",\n          suspendId: \"\",\n          time: \"\",\n          modal: false\n        }, () => this.refreshTable());\n      }).catch(err => {\n        if (err.response.status == 419) {\n          toast.error(\"Session Expired\");\n        }\n      });\n    };\n\n    this.state = {\n      data: [],\n      loading: true,\n      modal: false,\n      username: \"\",\n      id: \"\",\n      suspendName: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.refreshTable();\n  }\n\n  render() {\n    return React.createElement(MDBCard, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(MDBCardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(MDBCardTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Report Data\"), React.createElement(MDBModal, {\n      isOpen: this.state.modal,\n      toggle: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(MDBModalHeader, {\n      toggle: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"Suspend \", this.state.suspendName), React.createElement(MDBModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(DatePicker, {\n      format: \"d MMM y\",\n      value: this.state.suspendTime,\n      onChange: this.changeSuspendTime,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    })), React.createElement(MDBModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(MDBBtn, {\n      color: \"secondary\",\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"Close\"), React.createElement(MDBBtn, {\n      color: \"primary\",\n      onClick: this.suspendUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"Save changes\"))), React.createElement(Datatable, {\n      columns: [{\n        name: 'No',\n        selector: 'no',\n        sortable: true,\n        width: \"60px\"\n      }, {\n        name: 'Report Type',\n        selector: 'postId',\n        sortable: true,\n        cell: row => row.postId ? \"post\" : \"user\"\n      }, {\n        name: 'Report',\n        selector: 'postId',\n        cell: row => row.postId ? React.createElement(\"div\", {\n          style: {\n            display: \"block\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185\n          },\n          __self: this\n        }, React.createElement(MDBCarousel, {\n          activeItem: 1,\n          length: row.postId.image.length,\n          showControls: row.postId.image.length > 1,\n          showIndicators: row.postId.image.length > 1,\n          className: \"z-depth-1\",\n          interval: false,\n          slide: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185\n          },\n          __self: this\n        }, React.createElement(MDBCarouselInner, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194\n          },\n          __self: this\n        }, row.postId.image.map((o, id) => {\n          return React.createElement(MDBCarouselItem, {\n            itemId: id + 1,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 198\n            },\n            __self: this\n          }, React.createElement(MDBView, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 199\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            className: \"d-block w-100\",\n            src: post_url + o,\n            alt: \"image \".concat(id + 1),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 200\n            },\n            __self: this\n          })));\n        }))), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212\n          },\n          __self: this\n        }, \"Caption : \", row.postId.caption), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 213\n          },\n          __self: this\n        }, \"Posted By :\", React.createElement(\"a\", {\n          href: \"\".concat(frontend_url, \"profile/\").concat(row.postId.user.username),\n          target: \"_blank\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: profile_url + row.postId.user.profilepicture,\n          width: 60,\n          alt: row.postId.user.profilepicture,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216\n          },\n          __self: this\n        }), \" \", row.postId.user.username)), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: \"\".concat(frontend_url, \"post/\").concat(row.postId._id),\n          target: '_blank',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220\n          },\n          __self: this\n        }, \"Post Url\"))) : React.createElement(\"a\", {\n          href: \"\".concat(frontend_url, \"profile/\").concat(row.userId.username),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: profile_url + row.userId.profilepicture,\n          alt: row.userId.profilepicture,\n          width: 60,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222\n          },\n          __self: this\n        }), \" \", row.userId.username, \" \")\n      }, {\n        name: 'Reporter',\n        selector: 'reportedBy',\n        cell: row => React.createElement(\"a\", {\n          href: \"\".concat(frontend_url, \"profile/\").concat(row.reportedBy.username),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 229\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: profile_url + row.reportedBy.profilepicture,\n          alt: row.reportedBy.profilepicture,\n          width: 60,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 229\n          },\n          __self: this\n        }), \" \", row.reportedBy.username, \" \")\n      }, {\n        name: 'Reason',\n        selector: 'reason'\n      }, {\n        name: 'Action',\n        selector: '_id',\n        width: \"300px\",\n        cell: this.action\n      }],\n      data: this.state.data,\n      progressPending: this.state.loading,\n      progressComponent: React.createElement(\"div\", {\n        className: \"container-loading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"spinner-grow text-warning\",\n        role: \"status\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"sr-only\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, \"Loading...\")), React.createElement(\"div\", {\n        className: \"spinner-grow text-primary\",\n        role: \"status\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"sr-only\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, \"Loading...\")), React.createElement(\"div\", {\n        className: \"spinner-grow text-default\",\n        role: \"status\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"sr-only\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, \"Loading...\"))),\n      pagination: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapToStateProps = state => {\n  return {\n    token: state.user.token\n  };\n};\n\nexport default connect(mapToStateProps)(ReportPage);","map":{"version":3,"sources":["/Users/ericanthonywu/Projects/TA-Purwadhika/admin/src/views/ReportPage.jsx"],"names":["React","connect","MDBBtn","MDBCard","MDBCardBody","MDBCardText","MDBCardTitle","MDBCarousel","MDBCarouselInner","MDBCarouselItem","MDBContainer","MDBDataTable","MDBModal","MDBModalBody","MDBModalFooter","MDBModalHeader","MDBView","Axios","api_url","err","frontend_url","post_url","profile_url","Datatable","Swal","withReactContent","toast","DatePicker","moment","swal","ReportPage","Component","constructor","props","refreshTable","post","token","localStorage","getItem","then","res","data","forEach","o","id","no","setState","loading","catch","action","rows","userId","fire","title","status","username","text","type","showCancelButton","confirmButtonText","cancelButtonText","reverseButtons","value","_id","error","history","push","console","log","modal","suspendName","suspendId","postId","ban","changeSuspendTime","date","suspendTime","toggle","state","time","suspendUser","user","response","componentDidMount","render","name","selector","sortable","width","cell","row","display","image","length","map","caption","profilepicture","reportedBy","mapToStateProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {\n    MDBBtn,\n    MDBCard,\n    MDBCardBody,\n    MDBCardText,\n    MDBCardTitle, MDBCarousel, MDBCarouselInner, MDBCarouselItem,\n    MDBContainer,\n    MDBDataTable,\n    MDBModal, MDBModalBody, MDBModalFooter,\n    MDBModalHeader, MDBView\n} from \"mdbreact\";\nimport Axios from \"axios\";\nimport {api_url, err, frontend_url, post_url, profile_url} from \"../global\";\nimport Datatable from 'react-data-table-component'\nimport Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\nimport {toast} from \"react-toastify\";\nimport DatePicker from 'react-date-picker'\nimport moment from \"moment\";\n\nconst swal = withReactContent(Swal);\n\nclass ReportPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            loading: true,\n            modal: false,\n            username: \"\",\n            id: \"\",\n            suspendName: \"\"\n        }\n    }\n\n    componentDidMount() {\n        this.refreshTable();\n    };\n\n    refreshTable = () => {\n        Axios.post(`${api_url}report`, {\n            token: this.props.token || localStorage.getItem('token')\n        }).then(res => {\n            const data = res.data.data;\n            data.forEach((o, id) => {\n                data[id].no = id + 1;\n            });\n            this.setState({\n                data: data,\n                loading: false\n            })\n        }).catch(err);\n    };\n    action = rows => rows.userId ? <>\n        <MDBBtn size={\"sm\"} gradient={\"frozen-dreams\"} onClick={() => {\n            swal.fire({\n                title: `Apakah anda yakin akan ${rows.userId.status !== 1 ? \"block\" : \"unblock\"} ${rows.userId.username}?`,\n                text: `Anda bisa ${rows.userId.status !== 1 ? \"unblock\" : \"block\"} ${rows.userId.username} kembali`,\n                type: 'warning',\n                showCancelButton: true,\n                confirmButtonText: `Ya, ${rows.userId.status !== 1 ? \"Block\" : \"Unblock\"} saja!`,\n                cancelButtonText: 'Batalkan',\n                reverseButtons: true\n            }).then(res => {\n                if (res.value) {\n                    Axios.post(`${api_url}blockUsers`, {\n                        token: this.props.token,\n                        id: rows.userId._id,\n                        status: rows.userId.status\n                    }).then(res => {\n                        swal.fire(\n                            `Sukses! User ${rows.userId.username} telah di ${rows.userId.status !== 1 ? \"Block\" : \"Unblock\"}`,\n                            '',\n                            'success'\n                        );\n                        this.refreshTable()\n                    }).catch(err => {\n                        if (err.status == 419) {\n                            toast.error(\"Session Expired\");\n                            this.props.history.push('/')\n                        }\n                        console.log(err)\n                    })\n                }\n            })\n        }}> {rows.userId.status == 1 ? \"unblock\" : \"block\"} </MDBBtn>\n        <MDBBtn size={\"sm\"} gradient={\"sunny-morning\"} onClick={() => {\n            this.setState({\n                modal: true,\n                suspendName: rows.username,\n                suspendId: rows._id\n            })\n        }}> {rows.userId.status == 2 ? \"unsuspend\" : \"suspend\"}</MDBBtn>\n    </> : <MDBBtn onClick={() => {\n        swal.fire({\n            title: `Apakah anda yakin akan ${!rows.postId.ban ? \"hide\" : \"unhide\"} post ini?`,\n            text: `Anda bisa ${rows.postId.ban ? \"unhide\" : \"hide\"} post ini kembali`,\n            type: 'warning',\n            showCancelButton: true,\n            confirmButtonText: `Ya, ${!rows.postId.ban ? \"Hide\" : \"Unhide\"} saja!`,\n            cancelButtonText: 'Batalkan',\n            reverseButtons: true\n        }).then(res => {\n            if (res.value) {\n                Axios.post(`${api_url}hidePost`, {\n                    token: this.props.token,\n                    post: rows.postId._id,\n                    ban: !rows.postId.ban\n                }).then(res => {\n                    console.log(rows);\n                    swal.fire(`Success! Post telah di hide!`, '', 'success');\n                    this.refreshTable()\n                })\n            }\n        })\n    }} color={\"red\"}>{!rows.postId.ban ? \"Hide\" : \"Unhide\"} Posts</MDBBtn>;\n\n    changeSuspendTime = date => this.setState({suspendTime: date})\n\n    toggle = () => this.setState({\n        modal: !this.state.modal,\n        suspendName: this.state.modal ? this.state.suspendName : \"\",\n        suspendId: this.state.modal ? this.state.suspendId : \"\",\n        time: this.state.modal ? this.state.time : \"\",\n    });\n\n    suspendUser = () => {\n        Axios.post(`${api_url}suspendUser`, {\n            token: this.props.token,\n            user: this.state.suspendId,\n            time: this.state.suspendTime\n        }).then(res => {\n            swal.fire(`Sukses! User ${this.state.suspendName} telah di suspend!`, '', 'success');\n            this.setState({\n                suspendName: \"\",\n                suspendId: \"\",\n                time: \"\",\n                modal: false\n            }, () => this.refreshTable())\n        }).catch(err => {\n            if (err.response.status == 419) {\n                toast.error(\"Session Expired\")\n            }\n        })\n    };\n\n    render() {\n        return (\n            <MDBCard>\n                <MDBCardBody>\n                    <MDBCardTitle>Report Data</MDBCardTitle>\n                    <MDBModal isOpen={this.state.modal} toggle={this.toggle}>\n                        <MDBModalHeader toggle={this.toggle}>Suspend {this.state.suspendName}</MDBModalHeader>\n                        <MDBModalBody>\n                            <DatePicker\n                                format={\"d MMM y\"}\n                                value={this.state.suspendTime}\n                                onChange={this.changeSuspendTime}\n                            />\n                        </MDBModalBody>\n                        <MDBModalFooter>\n                            <MDBBtn color=\"secondary\" onClick={this.toggle}>Close</MDBBtn>\n                            <MDBBtn color=\"primary\" onClick={this.suspendUser}>Save changes</MDBBtn>\n                        </MDBModalFooter>\n                    </MDBModal>\n                    <Datatable\n                        columns={[\n                            {\n                                name: 'No',\n                                selector: 'no',\n                                sortable: true,\n                                width: \"60px\"\n                            },\n                            {\n                                name: 'Report Type',\n                                selector: 'postId',\n                                sortable: true,\n                                cell: row => row.postId ? \"post\" : \"user\"\n                            },\n                            {\n                                name: 'Report',\n                                selector: 'postId',\n                                cell: row => row.postId ? <div style={{display: \"block\"}}><MDBCarousel\n                                    activeItem={1}\n                                    length={row.postId.image.length}\n                                    showControls={row.postId.image.length > 1}\n                                    showIndicators={row.postId.image.length > 1}\n                                    className=\"z-depth-1\"\n                                    interval={false}\n                                    slide\n                                >\n                                    <MDBCarouselInner>\n                                        {\n                                            row.postId.image.map((o, id) => {\n                                                return (\n                                                    <MDBCarouselItem itemId={id + 1}>\n                                                        <MDBView>\n                                                            <img\n                                                                className=\"d-block w-100\"\n                                                                src={post_url + o}\n                                                                alt={`image ${id + 1}`}\n                                                            />\n                                                        </MDBView>\n                                                    </MDBCarouselItem>\n                                                )\n                                            })\n                                        }\n                                    </MDBCarouselInner>\n                                </MDBCarousel>\n                                    <p>Caption : {row.postId.caption}</p>\n                                    <p>Posted By :\n                                        <a href={`${frontend_url}profile/${row.postId.user.username}`}\n                                           target={\"_blank\"}>\n                                            <img src={profile_url + row.postId.user.profilepicture} width={60}\n                                                 alt={row.postId.user.profilepicture}/> {row.postId.user.username}\n                                        </a>\n                                    </p>\n                                    <p><a href={`${frontend_url}post/${row.postId._id}`} target={'_blank'}>Post Url</a>\n                                    </p>\n                                </div> : <a href={`${frontend_url}profile/${row.userId.username}`}><img\n                                    src={profile_url + row.userId.profilepicture} alt={row.userId.profilepicture}\n                                    width={60}/> {row.userId.username} </a>\n                            },\n                            {\n                                name: 'Reporter',\n                                selector: 'reportedBy',\n                                cell: row => <a href={`${frontend_url}profile/${row.reportedBy.username}`}><img\n                                    src={profile_url + row.reportedBy.profilepicture}\n                                    alt={row.reportedBy.profilepicture} width={60}/> {row.reportedBy.username} </a>\n                            },\n                            {\n                                name: 'Reason',\n                                selector: 'reason',\n                            },\n                            {\n                                name: 'Action',\n                                selector: '_id',\n                                width: \"300px\",\n                                cell: this.action\n                            },\n                        ]}\n                        data={this.state.data}\n                        progressPending={this.state.loading}\n                        progressComponent={\n                            <div className={\"container-loading\"}>\n                                <div className=\"spinner-grow text-warning\" role=\"status\">\n                                    <span className=\"sr-only\">Loading...</span>\n                                </div>\n                                <div className=\"spinner-grow text-primary\" role=\"status\">\n                                    <span className=\"sr-only\">Loading...</span>\n                                </div>\n                                <div className=\"spinner-grow text-default\" role=\"status\">\n                                    <span className=\"sr-only\">Loading...</span>\n                                </div>\n                            </div>\n                        }\n                        pagination\n                    />\n                </MDBCardBody>\n            </MDBCard>\n        );\n    }\n}\n\nconst mapToStateProps = state => {\n    return {\n        token: state.user.token\n    }\n};\nexport default connect(mapToStateProps)(ReportPage)\n"]},"metadata":{},"sourceType":"module"}