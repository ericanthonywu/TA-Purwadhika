{"ast":null,"code":"var _jsxFileName = \"/Users/ericanthonywu/Projects/TA-Purwadhika/admin/src/views/UserPage.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { MDBBtn, MDBCard, MDBCardBody, MDBCardText, MDBCardTitle, MDBContainer, MDBDataTable, MDBModal, MDBModalBody, MDBModalFooter, MDBModalHeader } from \"mdbreact\";\nimport Axios from \"axios\";\nimport { api_url, profile_url } from \"../global\";\nimport Datatable from 'react-data-table-component';\nimport Swal from 'sweetalert2';\nimport withReactContent from 'sweetalert2-react-content';\nimport { toast } from \"react-toastify\";\nimport DatePicker from 'react-date-picker';\nimport moment from \"moment\";\nconst swal = withReactContent(Swal);\n\nclass UserPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.refreshTable = () => {\n      Axios.post(\"\".concat(api_url, \"users\"), {\n        token: this.props.token || localStorage.getItem('token')\n      }).then(res => {\n        const data = res.data.data;\n        data.forEach((o, id) => {\n          data[id].no = id + 1;\n        });\n        this.setState({\n          data: data,\n          loading: false\n        });\n      });\n    };\n\n    this.action = rows => React.createElement(React.Fragment, null, React.createElement(MDBBtn, {\n      size: \"sm\",\n      gradient: \"frozen-dreams\",\n      onClick: () => {\n        swal.fire({\n          title: \"Apakah anda yakin akan \".concat(rows.status !== 1 ? \"block\" : \"unblock\", \" \").concat(rows.username, \"?\"),\n          text: \"Anda bisa \".concat(rows.status !== 1 ? \"unblock\" : \"block\", \" \").concat(rows.username, \" kembali\"),\n          type: 'warning',\n          showCancelButton: true,\n          confirmButtonText: \"Ya, \".concat(rows.status !== 1 ? \"Block\" : \"Unblock\", \" saja!\"),\n          cancelButtonText: 'Batalkan',\n          reverseButtons: true\n        }).then(res => {\n          if (res.value) {\n            Axios.post(\"\".concat(api_url, \"blockUsers\"), {\n              token: this.props.token,\n              id: rows._id,\n              status: rows.status\n            }).then(res => {\n              swal.fire(\"Sukses! User \".concat(rows.username, \" telah di \").concat(rows.status !== 1 ? \"Block\" : \"Unblock\"), '', 'success');\n              this.refreshTable();\n            }).catch(err => {\n              if (err.status == 419) {\n                toast.error(\"Session Expired\");\n                this.props.history.push('/');\n              }\n\n              console.log(err);\n            });\n          }\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \" \", rows.status == 1 ? \"unblock\" : \"block\", \" \"));\n\n    this.changeSuspendTime = date => {\n      this.setState({\n        suspendTime: date\n      });\n    };\n\n    this.toggle = () => this.setState({\n      modal: !this.state.modal,\n      suspendName: this.state.modal ? this.state.suspendName : \"\",\n      suspendId: this.state.modal ? this.state.suspendId : \"\",\n      time: this.state.modal ? this.state.time : \"\"\n    });\n\n    this.suspendUser = () => {\n      Axios.post(\"\".concat(api_url, \"suspendUser\"), {\n        token: this.props.token,\n        user: this.state.suspendId,\n        time: this.state.suspendTime\n      }).then(res => {\n        swal.fire(\"Sukses! User \".concat(this.state.suspendName, \" telah di suspend!\"), '', 'success');\n        this.setState({\n          suspendName: \"\",\n          suspendId: \"\",\n          time: \"\",\n          modal: false\n        }, () => this.refreshTable());\n      }).catch(err => {\n        if (err.response.status == 419) {\n          toast.error(\"Session Expired\");\n        }\n      });\n    };\n\n    this.state = {\n      data: [],\n      loading: true,\n      modal: false,\n      username: \"\",\n      id: \"\",\n      suspendName: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.refreshTable();\n  }\n\n  render() {\n    return React.createElement(MDBCard, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(MDBCardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(MDBCardTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Users Data\"), React.createElement(MDBModal, {\n      isOpen: this.state.modal,\n      toggle: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(MDBModalHeader, {\n      toggle: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Suspend \", this.state.suspendName), React.createElement(MDBModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(DatePicker, {\n      format: \"d MMM y\",\n      value: this.state.suspendTime,\n      onChange: this.changeSuspendTime,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    })), React.createElement(MDBModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(MDBBtn, {\n      color: \"secondary\",\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"Close\"), React.createElement(MDBBtn, {\n      color: \"primary\",\n      onClick: this.suspendUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"Save changes\"))), React.createElement(Datatable, {\n      columns: [{\n        name: 'No',\n        selector: 'no',\n        sortable: true,\n        width: \"60px\"\n      }, {\n        name: 'Profile Picture',\n        selector: 'profilepicture',\n        width: \"100px\",\n        cell: row => React.createElement(\"img\", {\n          width: 60,\n          src: profile_url + row.profilepicture,\n          alt: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        })\n      }, {\n        name: 'Email',\n        selector: 'email',\n        sortable: true\n      }, {\n        name: 'Username',\n        selector: 'username',\n        sortable: true\n      }, {\n        name: 'Action',\n        selector: '_id',\n        width: \"300px\",\n        cell: this.action\n      }],\n      data: this.state.data,\n      progressPending: this.state.loading,\n      progressComponent: React.createElement(\"div\", {\n        className: \"container-loading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"spinner-grow text-warning\",\n        role: \"status\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"sr-only\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, \"Loading...\")), React.createElement(\"div\", {\n        className: \"spinner-grow text-primary\",\n        role: \"status\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"sr-only\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, \"Loading...\")), React.createElement(\"div\", {\n        className: \"spinner-grow text-default\",\n        role: \"status\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"sr-only\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, \"Loading...\"))),\n      pagination: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapToStateProps = state => {\n  return {\n    token: state.user.token\n  };\n};\n\nexport default connect(mapToStateProps)(UserPage);","map":{"version":3,"sources":["/Users/ericanthonywu/Projects/TA-Purwadhika/admin/src/views/UserPage.jsx"],"names":["React","connect","MDBBtn","MDBCard","MDBCardBody","MDBCardText","MDBCardTitle","MDBContainer","MDBDataTable","MDBModal","MDBModalBody","MDBModalFooter","MDBModalHeader","Axios","api_url","profile_url","Datatable","Swal","withReactContent","toast","DatePicker","moment","swal","UserPage","Component","constructor","props","refreshTable","post","token","localStorage","getItem","then","res","data","forEach","o","id","no","setState","loading","action","rows","fire","title","status","username","text","type","showCancelButton","confirmButtonText","cancelButtonText","reverseButtons","value","_id","catch","err","error","history","push","console","log","changeSuspendTime","date","suspendTime","toggle","modal","state","suspendName","suspendId","time","suspendUser","user","response","componentDidMount","render","name","selector","sortable","width","cell","row","profilepicture","mapToStateProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {\n    MDBBtn,\n    MDBCard,\n    MDBCardBody,\n    MDBCardText,\n    MDBCardTitle,\n    MDBContainer,\n    MDBDataTable,\n    MDBModal, MDBModalBody, MDBModalFooter,\n    MDBModalHeader\n} from \"mdbreact\";\nimport Axios from \"axios\";\nimport {api_url, profile_url} from \"../global\";\nimport Datatable from 'react-data-table-component'\nimport Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\nimport {toast} from \"react-toastify\";\nimport DatePicker from 'react-date-picker'\nimport moment from \"moment\";\n\nconst swal = withReactContent(Swal);\n\nclass UserPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            loading: true,\n            modal: false,\n            username: \"\",\n            id: \"\",\n            suspendName: \"\"\n        }\n    }\n\n    componentDidMount() {\n        this.refreshTable();\n    };\n\n    refreshTable = () => {\n        Axios.post(`${api_url}users`, {\n            token: this.props.token || localStorage.getItem('token')\n        }).then(res => {\n            const data = res.data.data;\n            data.forEach((o, id) => {\n                data[id].no = id + 1;\n            });\n            this.setState({\n                data: data,\n                loading: false\n            })\n        });\n    };\n    action = rows => <>\n        <MDBBtn size={\"sm\"} gradient={\"frozen-dreams\"} onClick={() => {\n            swal.fire({\n                title: `Apakah anda yakin akan ${rows.status !== 1 ? \"block\" : \"unblock\"} ${rows.username}?`,\n                text: `Anda bisa ${rows.status !== 1 ? \"unblock\" : \"block\"} ${rows.username} kembali`,\n                type: 'warning',\n                showCancelButton: true,\n                confirmButtonText: `Ya, ${rows.status !== 1 ? \"Block\" : \"Unblock\"} saja!`,\n                cancelButtonText: 'Batalkan',\n                reverseButtons: true\n            }).then(res => {\n                if (res.value) {\n                    Axios.post(`${api_url}blockUsers`, {\n                        token: this.props.token,\n                        id: rows._id,\n                        status: rows.status\n                    }).then(res => {\n                        swal.fire(\n                            `Sukses! User ${rows.username} telah di ${rows.status !== 1 ? \"Block\" : \"Unblock\"}`,\n                            '',\n                            'success'\n                        );\n                        this.refreshTable()\n                    }).catch(err => {\n                        if (err.status == 419) {\n                            toast.error(\"Session Expired\");\n                            this.props.history.push('/')\n                        }\n                        console.log(err)\n                    })\n                }\n            })\n        }}> {rows.status == 1 ? \"unblock\" : \"block\"} </MDBBtn>\n        {/*<MDBBtn size={\"sm\"} gradient={\"sunny-morning\"} onClick={() => {*/}\n        {/*    this.setState({*/}\n        {/*        modal: true,*/}\n        {/*        suspendName: rows.username,*/}\n        {/*        suspendId: rows._id*/}\n        {/*    })*/}\n        {/*}}> {rows.status == 2 ? \"unsuspend\" : \"suspend\"}</MDBBtn>*/}\n    </>;\n\n    changeSuspendTime = date => {\n        this.setState({suspendTime: date})\n    };\n\n    toggle = () => this.setState({\n        modal: !this.state.modal,\n        suspendName: this.state.modal ? this.state.suspendName : \"\",\n        suspendId: this.state.modal ? this.state.suspendId : \"\",\n        time: this.state.modal ? this.state.time : \"\",\n    });\n\n    suspendUser = () => {\n        Axios.post(`${api_url}suspendUser`, {\n            token: this.props.token,\n            user: this.state.suspendId,\n            time: this.state.suspendTime\n        }).then(res => {\n            swal.fire(`Sukses! User ${this.state.suspendName} telah di suspend!`, '', 'success');\n            this.setState({\n                suspendName: \"\",\n                suspendId: \"\",\n                time: \"\",\n                modal: false\n            },() => this.refreshTable())\n        }).catch(err => {\n            if(err.response.status == 419){\n                toast.error(\"Session Expired\")\n            }\n        })\n    };\n\n    render() {\n        return (\n            <MDBCard>\n                <MDBCardBody>\n                    <MDBCardTitle>Users Data</MDBCardTitle>\n                    <MDBModal isOpen={this.state.modal} toggle={this.toggle}>\n                        <MDBModalHeader toggle={this.toggle}>Suspend {this.state.suspendName}</MDBModalHeader>\n                        <MDBModalBody>\n                            <DatePicker\n                                format={\"d MMM y\"}\n                                value={this.state.suspendTime}\n                                onChange={this.changeSuspendTime}\n                            />\n                        </MDBModalBody>\n                        <MDBModalFooter>\n                            <MDBBtn color=\"secondary\" onClick={this.toggle}>Close</MDBBtn>\n                            <MDBBtn color=\"primary\" onClick={this.suspendUser}>Save changes</MDBBtn>\n                        </MDBModalFooter>\n                    </MDBModal>\n                    <Datatable\n                        columns={[\n                            {\n                                name: 'No',\n                                selector: 'no',\n                                sortable: true,\n                                width: \"60px\"\n                            },\n                            {\n                                name: 'Profile Picture',\n                                selector: 'profilepicture',\n                                width: \"100px\",\n                                cell: row => <img width={60} src={profile_url + row.profilepicture} alt=\"\"/>\n                            },\n                            {\n                                name: 'Email',\n                                selector: 'email',\n                                sortable: true,\n                            },\n                            {\n                                name: 'Username',\n                                selector: 'username',\n                                sortable: true,\n                            },\n                            {\n                                name: 'Action',\n                                selector: '_id',\n                                width: \"300px\",\n                                cell: this.action\n                            },\n                        ]}\n                        data={this.state.data}\n                        progressPending={this.state.loading}\n                        progressComponent={\n                            <div className={\"container-loading\"}>\n                                <div className=\"spinner-grow text-warning\" role=\"status\">\n                                    <span className=\"sr-only\">Loading...</span>\n                                </div>\n                                <div className=\"spinner-grow text-primary\" role=\"status\">\n                                    <span className=\"sr-only\">Loading...</span>\n                                </div>\n                                <div className=\"spinner-grow text-default\" role=\"status\">\n                                    <span className=\"sr-only\">Loading...</span>\n                                </div>\n                            </div>\n                        }\n                        pagination\n                    />\n                </MDBCardBody>\n            </MDBCard>\n        );\n    }\n}\n\nconst mapToStateProps = state => {\n    return {\n        token: state.user.token\n    }\n};\nexport default connect(mapToStateProps)(UserPage)\n"]},"metadata":{},"sourceType":"module"}